// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`生成 javascript 对象测试 OpenAPI-2.0生成List对象: OpenAPI-2.0生成List对象 1`] = `
"/**
 * @description 响应数据 array
 * @summary Response data entity object
 * @url [ POST ] /resp-array
 */
export const respArrayResponseentityByPost = [
{
// { string } 用户名
username: ''
}
]"
`;

exports[`生成 javascript 对象测试 OpenAPI-2.0生成对象测试: OpenAPI-2.0生成 interface 测试 1`] = `"{}"`;

exports[`生成 javascript 对象测试 OpenAPI-3.0生成对象测试: OpenAPI-3.00生成对象测试 1`] = `
"/**
 * @description Place an order for a pet
 * @summary Response data entity object
 * @url [ POST ] /v2/store/order
 */
export const v2StoreOrderResponseentityByPost = {
// { string }
id: '',
// { string }
petId: '',
// { number }
quantity: 0,
// { string }
shipDate: '',
// { 'placed' | 'approved' | 'delivered' } Order Status
status: 'placed',
// { boolean }
complete: false
}"
`;

exports[`生成 javascript 对象测试 formatter: formatter 1`] = `
"[
{
// { string } 用户名
username: "字符串"
}
]"
`;

exports[`生成 javascript 对象测试 formatter-null: formatter-null 1`] = `"null"`;

exports[`生成 javascript 对象测试 name - prefix - dropComment - onlyBody 属性测试: OpenAPI-2.0生成 对象 dropComment测试 1`] = `"export const v2StoreInventoryRequestentityByGet = {}"`;

exports[`生成 javascript 对象测试 name - prefix - dropComment - onlyBody 属性测试: OpenAPI-2.0生成 对象 name测试 1`] = `
"/**
 * @description Returns pet inventories by status、Returns a map of status codes to quantities
 * @summary Request data entity object
 * @url [ GET ] /v2/store/inventory
 */
export const 自定义名称 = {}"
`;

exports[`生成 javascript 对象测试 name - prefix - dropComment - onlyBody 属性测试: OpenAPI-2.0生成 对象 onlyBody测试 1`] = `"{}"`;

exports[`生成 javascript 对象测试 name - prefix - dropComment - onlyBody 属性测试: OpenAPI-2.0生成 对象 prefix测试 1`] = `
"/**
 * @description Returns pet inventories by status、Returns a map of status codes to quantities
 * @summary Request data entity object
 * @url [ GET ] /v2/store/inventory
 */
export const v2StoreInventoryRequestentityByGet = {}"
`;

exports[`生成 javascript 对象测试 open-api-3.0-dot: OpenAPI-2.0生成 对象 null 属性 1`] = `
"/**
 * @description 兼容非标准的dot参数形式
 * @summary Request data entity object
 * @url [ GET ] /compatible-error-specification-dot-query-param
 */
export const compatibleErrorSpecificationDotQueryParamRequestentityByGet = {
// { array } ID集合
ids: [
],
// { object }
dept: {
// { string } 创建者1号
deptCreateBy1: '',
// { string } 创建者2号
deptCreateBy2: ''
},
// { array }
roles: [
{
// { string } 角色创建者1号
roleCreateBy1: '',
// { string } 角色创建时间
roleCreateTime: ''
}
],
// { string } 有分页参数的话就加,根据你的实际查询参数编写
"有分页参数的话就加,根据你的实际查询参数编写": ''
}"
`;

exports[`生成 javascript 对象测试 open-api-3.0-dot: open-api-3.0-dot 1`] = `
"/**
 * @description 兼容非标准的dot参数形式
 * @summary Request data entity object
 * @url [ GET ] /compatible-error-specification-dot-query-param
 */
export const compatibleErrorSpecificationDotQueryParamRequestentityByGet = {}"
`;

exports[`生成 javascript 对象测试 空属性: OpenAPI-2.0生成 对象 null 属性 1`] = `
"/**
 * @description Returns pet inventories by status、Returns a map of status codes to quantities
 * @summary Request data entity object
 * @url [ GET ] /v2/store/inventory
 */
export const v2StoreInventoryRequestentityByGet = {}"
`;

exports[`生成 javascript 对象测试 空属性: OpenAPI-2.0生成 对象 空数组 1`] = `
"/**
 * @description Returns pet inventories by status、Returns a map of status codes to quantities
 * @summary Request data entity object
 * @url [ GET ] /v2/store/inventory
 */
export const v2StoreInventoryRequestentityByGet = {}"
`;
