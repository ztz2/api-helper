# 文档
server {
	listen  80;
	server_name  apih.andou.live;
	return 302 https://$server_name$request_uri;
}

# 文档
server {
	# HTTP2.0协议(需要nginx1.9.5+版本以上和SLL证书)
	listen 443 ssl http2;

	server_name  apih.andou.live;
	# HTTP2.0 服务器端推送
	# http2_push_preload  on;

	root   /www/api-helper/packages/docs/dist;
	index  index.html index.htm;

	# HTML内容安全策略
	# location ~*.html {
		# add_header Content-Security-Policy "script-src *.andou.tech, img-src 'self' *.andou.tech *.ax1x.com";
	#}
}

# 模板
server {
	listen  80;
	server_name  web-apih.andou.live;
	return 302 https://$server_name$request_uri;
}

# 服务器端
server {
    # pm2 start npm --name apih-server -- run start:prod
	# HTTP2.0协议(需要nginx1.9.5+版本以上和SLL证书)
	listen 443 ssl http2;

	server_name  web-apih.andou.live;
	# HTTP2.0 服务器端推送
	# http2_push_preload  on;

	root   html;
	index  index.html index.htm;

	# 代理配置
    location / {
        proxy_pass http://localhost:3210;
        proxy_set_header Host $host;
        # 设置允许的方法
        add_header Access-Control-Allow-Methods *;
        # 设置预检缓存时间(秒)
        add_header Access-Control-Max-Age 3600;
        # 默认情况下，Cookie不包括在CORS请求之中。设为true，即表示服务器明确许可，Cookie可以包含在请求中，一起发给服务器。这个值也只能设为true，如果服务器不要浏览器发送Cookie，删除该字段即可。
        add_header Access-Control-Allow-Credentials true;
        # 设置跨域的Origin，支持携带Cookie跨域
        add_header Access-Control-Allow-Origin $http_origin;
        # 设置自定义允许的请求头
        add_header Access-Control-Allow-Headers $http_access_control_request_headers;
        # 处理预检命令，有预检命令的时候直接返回，不用再次请求服务器
        if ($request_method = OPTIONS) {
            return 200;
        }
    }
}
