// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CLI测试-API代码生成 代码生成-JS: 代码生成-JS 1`] = `
"/* eslint-disable */
/* prettier-ignore-start */

/** ————————————— 警告：该文件由 api-helper 自动生成，切记不能对文件进行修改（因为生成之后内容将会覆盖该文件，如果自动生成代码不满足业务，提PR） —————————————  **/

// prettier-ignore
import { processRequestFunctionConfig } from '@api-helper/core/es/lib/helpers';
// prettier-ignore
import request from '../utils/request';

/**
 * @描述 uploads an image
 * @请求信息 [ POST ] /v2/pet/{petId}/uploadImage
 */
export function v2PetPetIdUploadImageByPost(data, extraData, ...args) {
  return request(
    processRequestFunctionConfig(
      data,
      extraData,
      v2PetPetIdUploadImageByPost.requestConfig
    ),
    ...args
  );
}
v2PetPetIdUploadImageByPost.requestConfig = {
  path: '/v2/pet/{petId}/uploadImage',
  method: 'post',
  formDataKeyNameList: ['additionalMetadata', 'file'],
  pathParamKeyNameList: ['petId'],
  queryStringKeyNameList: []
};

/**
 * @描述 Add a new pet to the store
 * @请求信息 [ POST ] /v2/pet
 */
export function v2PetByPost(data, extraData, ...args) {
  return request(
    processRequestFunctionConfig(data, extraData, v2PetByPost.requestConfig),
    ...args
  );
}
v2PetByPost.requestConfig = {
  path: '/v2/pet',
  method: 'post',
  formDataKeyNameList: [],
  pathParamKeyNameList: [],
  queryStringKeyNameList: []
};

/**
 * @描述 Update an existing pet
 * @请求信息 [ PUT ] /v2/pet
 */
export function v2PetByPut(data, extraData, ...args) {
  return request(
    processRequestFunctionConfig(data, extraData, v2PetByPut.requestConfig),
    ...args
  );
}
v2PetByPut.requestConfig = {
  path: '/v2/pet',
  method: 'put',
  formDataKeyNameList: [],
  pathParamKeyNameList: [],
  queryStringKeyNameList: []
};

/**
 * @描述 Finds Pets by status、Multiple status values can be provided with comma separated strings
 * @请求信息 [ GET ] /v2/pet/findByStatus
 */
export function v2PetFindByStatusByGet(data, extraData, ...args) {
  return request(
    processRequestFunctionConfig(
      data,
      extraData,
      v2PetFindByStatusByGet.requestConfig
    ),
    ...args
  );
}
v2PetFindByStatusByGet.requestConfig = {
  path: '/v2/pet/findByStatus',
  method: 'get',
  formDataKeyNameList: [],
  pathParamKeyNameList: [],
  queryStringKeyNameList: ['status']
};

/**
 * @描述 Finds Pets by tags、Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.
 * @请求信息 [ GET ] /v2/pet/findByTags
 */
export function v2PetFindByTagsByGet(data, extraData, ...args) {
  return request(
    processRequestFunctionConfig(
      data,
      extraData,
      v2PetFindByTagsByGet.requestConfig
    ),
    ...args
  );
}
v2PetFindByTagsByGet.requestConfig = {
  path: '/v2/pet/findByTags',
  method: 'get',
  formDataKeyNameList: [],
  pathParamKeyNameList: [],
  queryStringKeyNameList: ['tags']
};

/**
 * @描述 Find pet by ID、Returns a single pet
 * @请求信息 [ GET ] /v2/pet/{petId}
 */
export function v2PetPetIdByGet(data, extraData, ...args) {
  return request(
    processRequestFunctionConfig(
      data,
      extraData,
      v2PetPetIdByGet.requestConfig
    ),
    ...args
  );
}
v2PetPetIdByGet.requestConfig = {
  path: '/v2/pet/{petId}',
  method: 'get',
  formDataKeyNameList: [],
  pathParamKeyNameList: ['petId'],
  queryStringKeyNameList: []
};

/**
 * @描述 Updates a pet in the store with form data
 * @请求信息 [ POST ] /v2/pet/{petId}
 */
export function v2PetPetIdByPost(data, extraData, ...args) {
  return request(
    processRequestFunctionConfig(
      data,
      extraData,
      v2PetPetIdByPost.requestConfig
    ),
    ...args
  );
}
v2PetPetIdByPost.requestConfig = {
  path: '/v2/pet/{petId}',
  method: 'post',
  formDataKeyNameList: ['name', 'status'],
  pathParamKeyNameList: ['petId'],
  queryStringKeyNameList: []
};

/**
 * @描述 Deletes a pet
 * @请求信息 [ DELETE ] /v2/pet/{petId}
 */
export function v2PetPetIdByDelete(data, extraData, ...args) {
  return request(
    processRequestFunctionConfig(
      data,
      extraData,
      v2PetPetIdByDelete.requestConfig
    ),
    ...args
  );
}
v2PetPetIdByDelete.requestConfig = {
  path: '/v2/pet/{petId}',
  method: 'delete',
  formDataKeyNameList: [],
  pathParamKeyNameList: ['petId'],
  queryStringKeyNameList: []
};

/**
 * @描述 Place an order for a pet
 * @请求信息 [ POST ] /v2/store/order
 */
export function v2StoreOrderByPost(data, extraData, ...args) {
  return request(
    processRequestFunctionConfig(
      data,
      extraData,
      v2StoreOrderByPost.requestConfig
    ),
    ...args
  );
}
v2StoreOrderByPost.requestConfig = {
  path: '/v2/store/order',
  method: 'post',
  formDataKeyNameList: [],
  pathParamKeyNameList: [],
  queryStringKeyNameList: []
};

/**
 * @描述 Find purchase order by ID、For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions
 * @请求信息 [ GET ] /v2/store/order/{orderId}
 */
export function v2StoreOrderOrderIdByGet(data, extraData, ...args) {
  return request(
    processRequestFunctionConfig(
      data,
      extraData,
      v2StoreOrderOrderIdByGet.requestConfig
    ),
    ...args
  );
}
v2StoreOrderOrderIdByGet.requestConfig = {
  path: '/v2/store/order/{orderId}',
  method: 'get',
  formDataKeyNameList: [],
  pathParamKeyNameList: ['orderId'],
  queryStringKeyNameList: []
};

/**
 * @描述 Delete purchase order by ID、For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors
 * @请求信息 [ DELETE ] /v2/store/order/{orderId}
 */
export function v2StoreOrderOrderIdByDelete(data, extraData, ...args) {
  return request(
    processRequestFunctionConfig(
      data,
      extraData,
      v2StoreOrderOrderIdByDelete.requestConfig
    ),
    ...args
  );
}
v2StoreOrderOrderIdByDelete.requestConfig = {
  path: '/v2/store/order/{orderId}',
  method: 'delete',
  formDataKeyNameList: [],
  pathParamKeyNameList: ['orderId'],
  queryStringKeyNameList: []
};

/**
 * @描述 Returns pet inventories by status、Returns a map of status codes to quantities
 * @请求信息 [ GET ] /v2/store/inventory
 */
export function v2StoreInventoryByGet(data, extraData, ...args) {
  return request(
    processRequestFunctionConfig(
      data,
      extraData,
      v2StoreInventoryByGet.requestConfig
    ),
    ...args
  );
}
v2StoreInventoryByGet.requestConfig = {
  path: '/v2/store/inventory',
  method: 'get',
  formDataKeyNameList: [],
  pathParamKeyNameList: [],
  queryStringKeyNameList: []
};

/**
 * @描述 Creates list of users with given input array
 * @请求信息 [ POST ] /v2/user/createWithArray
 */
export function v2UserCreateWithArrayByPost(data, extraData, ...args) {
  return request(
    processRequestFunctionConfig(
      data,
      extraData,
      v2UserCreateWithArrayByPost.requestConfig
    ),
    ...args
  );
}
v2UserCreateWithArrayByPost.requestConfig = {
  path: '/v2/user/createWithArray',
  method: 'post',
  formDataKeyNameList: [],
  pathParamKeyNameList: [],
  queryStringKeyNameList: []
};

/**
 * @描述 Creates list of users with given input array
 * @请求信息 [ POST ] /v2/user/createWithList
 */
export function v2UserCreateWithListByPost(data, extraData, ...args) {
  return request(
    processRequestFunctionConfig(
      data,
      extraData,
      v2UserCreateWithListByPost.requestConfig
    ),
    ...args
  );
}
v2UserCreateWithListByPost.requestConfig = {
  path: '/v2/user/createWithList',
  method: 'post',
  formDataKeyNameList: [],
  pathParamKeyNameList: [],
  queryStringKeyNameList: []
};

/**
 * @描述 Get user by user name
 * @请求信息 [ GET ] /v2/user/{username}
 */
export function v2UserUsernameByGet(data, extraData, ...args) {
  return request(
    processRequestFunctionConfig(
      data,
      extraData,
      v2UserUsernameByGet.requestConfig
    ),
    ...args
  );
}
v2UserUsernameByGet.requestConfig = {
  path: '/v2/user/{username}',
  method: 'get',
  formDataKeyNameList: [],
  pathParamKeyNameList: ['username'],
  queryStringKeyNameList: []
};

/**
 * @描述 Updated user、This can only be done by the logged in user.
 * @请求信息 [ PUT ] /v2/user/{username}
 */
export function v2UserUsernameByPut(data, extraData, ...args) {
  return request(
    processRequestFunctionConfig(
      data,
      extraData,
      v2UserUsernameByPut.requestConfig
    ),
    ...args
  );
}
v2UserUsernameByPut.requestConfig = {
  path: '/v2/user/{username}',
  method: 'put',
  formDataKeyNameList: [],
  pathParamKeyNameList: ['username'],
  queryStringKeyNameList: []
};

/**
 * @描述 Delete user、This can only be done by the logged in user.
 * @请求信息 [ DELETE ] /v2/user/{username}
 */
export function v2UserUsernameByDelete(data, extraData, ...args) {
  return request(
    processRequestFunctionConfig(
      data,
      extraData,
      v2UserUsernameByDelete.requestConfig
    ),
    ...args
  );
}
v2UserUsernameByDelete.requestConfig = {
  path: '/v2/user/{username}',
  method: 'delete',
  formDataKeyNameList: [],
  pathParamKeyNameList: ['username'],
  queryStringKeyNameList: []
};

/**
 * @描述 Logs user into the system
 * @请求信息 [ GET ] /v2/user/login
 */
export function v2UserLoginByGet(data, extraData, ...args) {
  return request(
    processRequestFunctionConfig(
      data,
      extraData,
      v2UserLoginByGet.requestConfig
    ),
    ...args
  );
}
v2UserLoginByGet.requestConfig = {
  path: '/v2/user/login',
  method: 'get',
  formDataKeyNameList: [],
  pathParamKeyNameList: [],
  queryStringKeyNameList: ['username', 'password']
};

/**
 * @描述 Logs out current logged in user session
 * @请求信息 [ GET ] /v2/user/logout
 */
export function v2UserLogoutByGet(data, extraData, ...args) {
  return request(
    processRequestFunctionConfig(
      data,
      extraData,
      v2UserLogoutByGet.requestConfig
    ),
    ...args
  );
}
v2UserLogoutByGet.requestConfig = {
  path: '/v2/user/logout',
  method: 'get',
  formDataKeyNameList: [],
  pathParamKeyNameList: [],
  queryStringKeyNameList: []
};

/**
 * @描述 Create user、This can only be done by the logged in user.
 * @请求信息 [ POST ] /v2/user
 */
export function v2UserByPost(data, extraData, ...args) {
  return request(
    processRequestFunctionConfig(data, extraData, v2UserByPost.requestConfig),
    ...args
  );
}
v2UserByPost.requestConfig = {
  path: '/v2/user',
  method: 'post',
  formDataKeyNameList: [],
  pathParamKeyNameList: [],
  queryStringKeyNameList: []
};
"
`;

exports[`CLI测试-API代码生成 代码生成-ts: 代码生成-ts 1`] = `
"/* tslint:disable */
/* eslint-disable */
/* prettier-ignore-start */

/** ————————————— 警告：该文件由 api-helper 自动生成，切记不能对文件进行修改（因为生成之后内容将会覆盖该文件，如果自动生成代码不满足业务，提PR） —————————————  **/

// @ts-ignore
// prettier-ignore
import {
  RequestFunctionRestArgsType,
  processRequestFunctionConfig,
} from '@api-helper/core/es/lib/helpers';
// @ts-ignore
// prettier-ignore
import request from '../utils/request';
// @ts-ignore
// prettier-ignore
type CurrentRequestFunctionRestArgsType = RequestFunctionRestArgsType<typeof request>;

/**
 * @描述 【请求数据接口定义】uploads an image】
 * @请求头 POST /v2/pet/{petId}/uploadImage
 */
export interface IV2PetPetIdUploadImageRequestByPost {
  // ID of pet to update
  petId: string;
  // Additional data to pass to server
  additionalMetadata?: string;
  // file to upload
  file?: string;
}
/**
 * @描述 【响应数据接口定义】uploads an image】
 * @请求头 POST /v2/pet/{petId}/uploadImage
 */
export interface IV2PetPetIdUploadImageResponseByPost {
  code?: number;
  type?: string;
  message?: string;
}
/**
 * @描述 uploads an image
 * @请求信息 [ POST ] /v2/pet/{petId}/uploadImage
 */
export function v2PetPetIdUploadImageByPost(
  data: IV2PetPetIdUploadImageRequestByPost,
  extraData: unknown,
  ...args: CurrentRequestFunctionRestArgsType
) {
  return request<IV2PetPetIdUploadImageResponseByPost>(
    processRequestFunctionConfig(
      data,
      extraData,
      v2PetPetIdUploadImageByPost.requestConfig
    ),
    ...args
  );
}
v2PetPetIdUploadImageByPost.requestConfig = {
  path: '/v2/pet/{petId}/uploadImage',
  method: 'post',
  formDataKeyNameList: ['additionalMetadata', 'file'],
  pathParamKeyNameList: ['petId'],
  queryStringKeyNameList: []
};

/**
 * @描述 【请求数据接口定义】Add a new pet to the store】
 * @请求头 POST /v2/pet
 */
export interface IV2PetRequestByPost {
  id?: number;
  category: {
    id?: number;
    name?: string;
  };
  name: string;
  photoUrls: Array<string>;
  tags: Array<{
    id?: number;
    name?: string;
  }>;
  // pet status in the store
  status?: 'available' | 'pending' | 'sold';
}
/**
 * @描述 【响应数据类型定义】Add a new pet to the store】
 * @请求头 POST /v2/pet
 */
export type V2PetResponseTypeByPost = any;
/**
 * @描述 Add a new pet to the store
 * @请求信息 [ POST ] /v2/pet
 */
export function v2PetByPost(
  data: IV2PetRequestByPost,
  extraData: unknown,
  ...args: CurrentRequestFunctionRestArgsType
) {
  return request<V2PetResponseTypeByPost>(
    processRequestFunctionConfig(data, extraData, v2PetByPost.requestConfig),
    ...args
  );
}
v2PetByPost.requestConfig = {
  path: '/v2/pet',
  method: 'post',
  formDataKeyNameList: [],
  pathParamKeyNameList: [],
  queryStringKeyNameList: []
};

/**
 * @描述 【请求数据接口定义】Update an existing pet】
 * @请求头 PUT /v2/pet
 */
export interface IV2PetRequestByPut {
  id?: number;
  category: {
    id?: number;
    name?: string;
  };
  name: string;
  photoUrls: Array<string>;
  tags: Array<{
    id?: number;
    name?: string;
  }>;
  // pet status in the store
  status?: 'available' | 'pending' | 'sold';
}
/**
 * @描述 【响应数据类型定义】Update an existing pet】
 * @请求头 PUT /v2/pet
 */
export type V2PetResponseTypeByPut = any;
/**
 * @描述 Update an existing pet
 * @请求信息 [ PUT ] /v2/pet
 */
export function v2PetByPut(
  data: IV2PetRequestByPut,
  extraData: unknown,
  ...args: CurrentRequestFunctionRestArgsType
) {
  return request<V2PetResponseTypeByPut>(
    processRequestFunctionConfig(data, extraData, v2PetByPut.requestConfig),
    ...args
  );
}
v2PetByPut.requestConfig = {
  path: '/v2/pet',
  method: 'put',
  formDataKeyNameList: [],
  pathParamKeyNameList: [],
  queryStringKeyNameList: []
};

/**
 * @描述 【请求数据接口定义】Finds Pets by status、Multiple status values can be provided with comma separated strings】
 * @请求头 GET /v2/pet/findByStatus
 */
export interface IV2PetFindByStatusRequestByGet {
  // Status values that need to be considered for filter
  status: string;
}
/**
 * @描述 【响应数据类型定义】Finds Pets by status、Multiple status values can be provided with comma separated strings】
 * @请求头 GET /v2/pet/findByStatus
 */
export type V2PetFindByStatusResponseTypeByGet = Array<{
  id?: number;
  category: {
    id?: number;
    name?: string;
  };
  name: string;
  photoUrls: Array<string>;
  tags: Array<{
    id?: number;
    name?: string;
  }>;
  // pet status in the store
  status?: 'available' | 'pending' | 'sold';
}>;
/**
 * @描述 Finds Pets by status、Multiple status values can be provided with comma separated strings
 * @请求信息 [ GET ] /v2/pet/findByStatus
 */
export function v2PetFindByStatusByGet(
  data: IV2PetFindByStatusRequestByGet,
  extraData: unknown,
  ...args: CurrentRequestFunctionRestArgsType
) {
  return request<V2PetFindByStatusResponseTypeByGet>(
    processRequestFunctionConfig(
      data,
      extraData,
      v2PetFindByStatusByGet.requestConfig
    ),
    ...args
  );
}
v2PetFindByStatusByGet.requestConfig = {
  path: '/v2/pet/findByStatus',
  method: 'get',
  formDataKeyNameList: [],
  pathParamKeyNameList: [],
  queryStringKeyNameList: ['status']
};

/**
 * @描述 【请求数据接口定义】Finds Pets by tags、Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.】
 * @请求头 GET /v2/pet/findByTags
 */
export interface IV2PetFindByTagsRequestByGet {
  // Tags to filter by
  tags: string;
}
/**
 * @描述 【响应数据类型定义】Finds Pets by tags、Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.】
 * @请求头 GET /v2/pet/findByTags
 */
export type V2PetFindByTagsResponseTypeByGet = Array<{
  id?: number;
  category: {
    id?: number;
    name?: string;
  };
  name: string;
  photoUrls: Array<string>;
  tags: Array<{
    id?: number;
    name?: string;
  }>;
  // pet status in the store
  status?: 'available' | 'pending' | 'sold';
}>;
/**
 * @描述 Finds Pets by tags、Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.
 * @请求信息 [ GET ] /v2/pet/findByTags
 */
export function v2PetFindByTagsByGet(
  data: IV2PetFindByTagsRequestByGet,
  extraData: unknown,
  ...args: CurrentRequestFunctionRestArgsType
) {
  return request<V2PetFindByTagsResponseTypeByGet>(
    processRequestFunctionConfig(
      data,
      extraData,
      v2PetFindByTagsByGet.requestConfig
    ),
    ...args
  );
}
v2PetFindByTagsByGet.requestConfig = {
  path: '/v2/pet/findByTags',
  method: 'get',
  formDataKeyNameList: [],
  pathParamKeyNameList: [],
  queryStringKeyNameList: ['tags']
};

/**
 * @描述 【请求数据接口定义】Find pet by ID、Returns a single pet】
 * @请求头 GET /v2/pet/{petId}
 */
export interface IV2PetPetIdRequestByGet {
  // ID of pet to return
  petId: string;
}
/**
 * @描述 【响应数据接口定义】Find pet by ID、Returns a single pet】
 * @请求头 GET /v2/pet/{petId}
 */
export interface IV2PetPetIdResponseByGet {
  id?: number;
  category: {
    id?: number;
    name?: string;
  };
  name: string;
  photoUrls: Array<string>;
  tags: Array<{
    id?: number;
    name?: string;
  }>;
  // pet status in the store
  status?: 'available' | 'pending' | 'sold';
}
/**
 * @描述 Find pet by ID、Returns a single pet
 * @请求信息 [ GET ] /v2/pet/{petId}
 */
export function v2PetPetIdByGet(
  data: IV2PetPetIdRequestByGet,
  extraData: unknown,
  ...args: CurrentRequestFunctionRestArgsType
) {
  return request<IV2PetPetIdResponseByGet>(
    processRequestFunctionConfig(
      data,
      extraData,
      v2PetPetIdByGet.requestConfig
    ),
    ...args
  );
}
v2PetPetIdByGet.requestConfig = {
  path: '/v2/pet/{petId}',
  method: 'get',
  formDataKeyNameList: [],
  pathParamKeyNameList: ['petId'],
  queryStringKeyNameList: []
};

/**
 * @描述 【请求数据接口定义】Updates a pet in the store with form data】
 * @请求头 POST /v2/pet/{petId}
 */
export interface IV2PetPetIdRequestByPost {
  // ID of pet that needs to be updated
  petId: string;
  // Updated name of the pet
  name?: string;
  // Updated status of the pet
  status?: string;
}
/**
 * @描述 【响应数据类型定义】Updates a pet in the store with form data】
 * @请求头 POST /v2/pet/{petId}
 */
export type V2PetPetIdResponseTypeByPost = any;
/**
 * @描述 Updates a pet in the store with form data
 * @请求信息 [ POST ] /v2/pet/{petId}
 */
export function v2PetPetIdByPost(
  data: IV2PetPetIdRequestByPost,
  extraData: unknown,
  ...args: CurrentRequestFunctionRestArgsType
) {
  return request<V2PetPetIdResponseTypeByPost>(
    processRequestFunctionConfig(
      data,
      extraData,
      v2PetPetIdByPost.requestConfig
    ),
    ...args
  );
}
v2PetPetIdByPost.requestConfig = {
  path: '/v2/pet/{petId}',
  method: 'post',
  formDataKeyNameList: ['name', 'status'],
  pathParamKeyNameList: ['petId'],
  queryStringKeyNameList: []
};

/**
 * @描述 【请求数据接口定义】Deletes a pet】
 * @请求头 DELETE /v2/pet/{petId}
 */
export interface IV2PetPetIdRequestByDelete {
  // Pet id to delete
  petId: string;
}
/**
 * @描述 【响应数据类型定义】Deletes a pet】
 * @请求头 DELETE /v2/pet/{petId}
 */
export type V2PetPetIdResponseTypeByDelete = any;
/**
 * @描述 Deletes a pet
 * @请求信息 [ DELETE ] /v2/pet/{petId}
 */
export function v2PetPetIdByDelete(
  data: IV2PetPetIdRequestByDelete,
  extraData: unknown,
  ...args: CurrentRequestFunctionRestArgsType
) {
  return request<V2PetPetIdResponseTypeByDelete>(
    processRequestFunctionConfig(
      data,
      extraData,
      v2PetPetIdByDelete.requestConfig
    ),
    ...args
  );
}
v2PetPetIdByDelete.requestConfig = {
  path: '/v2/pet/{petId}',
  method: 'delete',
  formDataKeyNameList: [],
  pathParamKeyNameList: ['petId'],
  queryStringKeyNameList: []
};

/**
 * @描述 【请求数据接口定义】Place an order for a pet】
 * @请求头 POST /v2/store/order
 */
export interface IV2StoreOrderRequestByPost {
  id?: number;
  petId?: number;
  quantity?: number;
  shipDate?: string;
  // Order Status
  status?: 'placed' | 'approved' | 'delivered';
  complete?: boolean;
}
/**
 * @描述 【响应数据接口定义】Place an order for a pet】
 * @请求头 POST /v2/store/order
 */
export interface IV2StoreOrderResponseByPost {
  id?: number;
  petId?: number;
  quantity?: number;
  shipDate?: string;
  // Order Status
  status?: 'placed' | 'approved' | 'delivered';
  complete?: boolean;
}
/**
 * @描述 Place an order for a pet
 * @请求信息 [ POST ] /v2/store/order
 */
export function v2StoreOrderByPost(
  data: IV2StoreOrderRequestByPost,
  extraData: unknown,
  ...args: CurrentRequestFunctionRestArgsType
) {
  return request<IV2StoreOrderResponseByPost>(
    processRequestFunctionConfig(
      data,
      extraData,
      v2StoreOrderByPost.requestConfig
    ),
    ...args
  );
}
v2StoreOrderByPost.requestConfig = {
  path: '/v2/store/order',
  method: 'post',
  formDataKeyNameList: [],
  pathParamKeyNameList: [],
  queryStringKeyNameList: []
};

/**
 * @描述 【请求数据接口定义】Find purchase order by ID、For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions】
 * @请求头 GET /v2/store/order/{orderId}
 */
export interface IV2StoreOrderOrderIdRequestByGet {
  // ID of pet that needs to be fetched
  orderId: string;
}
/**
 * @描述 【响应数据接口定义】Find purchase order by ID、For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions】
 * @请求头 GET /v2/store/order/{orderId}
 */
export interface IV2StoreOrderOrderIdResponseByGet {
  id?: number;
  petId?: number;
  quantity?: number;
  shipDate?: string;
  // Order Status
  status?: 'placed' | 'approved' | 'delivered';
  complete?: boolean;
}
/**
 * @描述 Find purchase order by ID、For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions
 * @请求信息 [ GET ] /v2/store/order/{orderId}
 */
export function v2StoreOrderOrderIdByGet(
  data: IV2StoreOrderOrderIdRequestByGet,
  extraData: unknown,
  ...args: CurrentRequestFunctionRestArgsType
) {
  return request<IV2StoreOrderOrderIdResponseByGet>(
    processRequestFunctionConfig(
      data,
      extraData,
      v2StoreOrderOrderIdByGet.requestConfig
    ),
    ...args
  );
}
v2StoreOrderOrderIdByGet.requestConfig = {
  path: '/v2/store/order/{orderId}',
  method: 'get',
  formDataKeyNameList: [],
  pathParamKeyNameList: ['orderId'],
  queryStringKeyNameList: []
};

/**
 * @描述 【请求数据接口定义】Delete purchase order by ID、For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors】
 * @请求头 DELETE /v2/store/order/{orderId}
 */
export interface IV2StoreOrderOrderIdRequestByDelete {
  // ID of the order that needs to be deleted
  orderId: string;
}
/**
 * @描述 【响应数据类型定义】Delete purchase order by ID、For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors】
 * @请求头 DELETE /v2/store/order/{orderId}
 */
export type V2StoreOrderOrderIdResponseTypeByDelete = any;
/**
 * @描述 Delete purchase order by ID、For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors
 * @请求信息 [ DELETE ] /v2/store/order/{orderId}
 */
export function v2StoreOrderOrderIdByDelete(
  data: IV2StoreOrderOrderIdRequestByDelete,
  extraData: unknown,
  ...args: CurrentRequestFunctionRestArgsType
) {
  return request<V2StoreOrderOrderIdResponseTypeByDelete>(
    processRequestFunctionConfig(
      data,
      extraData,
      v2StoreOrderOrderIdByDelete.requestConfig
    ),
    ...args
  );
}
v2StoreOrderOrderIdByDelete.requestConfig = {
  path: '/v2/store/order/{orderId}',
  method: 'delete',
  formDataKeyNameList: [],
  pathParamKeyNameList: ['orderId'],
  queryStringKeyNameList: []
};

/**
 * @描述 【请求数据类型定义】Returns pet inventories by status、Returns a map of status codes to quantities】
 * @请求头 GET /v2/store/inventory
 */
export type V2StoreInventoryRequestTypeByGet = any;
/**
 * @描述 【响应数据接口定义】Returns pet inventories by status、Returns a map of status codes to quantities】
 * @请求头 GET /v2/store/inventory
 */
export interface IV2StoreInventoryResponseByGet {}
/**
 * @描述 Returns pet inventories by status、Returns a map of status codes to quantities
 * @请求信息 [ GET ] /v2/store/inventory
 */
export function v2StoreInventoryByGet(
  data: V2StoreInventoryRequestTypeByGet,
  extraData: unknown,
  ...args: CurrentRequestFunctionRestArgsType
) {
  return request<IV2StoreInventoryResponseByGet>(
    processRequestFunctionConfig(
      data,
      extraData,
      v2StoreInventoryByGet.requestConfig
    ),
    ...args
  );
}
v2StoreInventoryByGet.requestConfig = {
  path: '/v2/store/inventory',
  method: 'get',
  formDataKeyNameList: [],
  pathParamKeyNameList: [],
  queryStringKeyNameList: []
};

/**
 * @描述 【请求数据类型定义】Creates list of users with given input array】
 * @请求头 POST /v2/user/createWithArray
 */
export type V2UserCreateWithArrayRequestTypeByPost = any;
/**
 * @描述 【响应数据类型定义】Creates list of users with given input array】
 * @请求头 POST /v2/user/createWithArray
 */
export type V2UserCreateWithArrayResponseTypeByPost = any;
/**
 * @描述 Creates list of users with given input array
 * @请求信息 [ POST ] /v2/user/createWithArray
 */
export function v2UserCreateWithArrayByPost(
  data: V2UserCreateWithArrayRequestTypeByPost,
  extraData: unknown,
  ...args: CurrentRequestFunctionRestArgsType
) {
  return request<V2UserCreateWithArrayResponseTypeByPost>(
    processRequestFunctionConfig(
      data,
      extraData,
      v2UserCreateWithArrayByPost.requestConfig
    ),
    ...args
  );
}
v2UserCreateWithArrayByPost.requestConfig = {
  path: '/v2/user/createWithArray',
  method: 'post',
  formDataKeyNameList: [],
  pathParamKeyNameList: [],
  queryStringKeyNameList: []
};

/**
 * @描述 【请求数据类型定义】Creates list of users with given input array】
 * @请求头 POST /v2/user/createWithList
 */
export type V2UserCreateWithListRequestTypeByPost = any;
/**
 * @描述 【响应数据类型定义】Creates list of users with given input array】
 * @请求头 POST /v2/user/createWithList
 */
export type V2UserCreateWithListResponseTypeByPost = any;
/**
 * @描述 Creates list of users with given input array
 * @请求信息 [ POST ] /v2/user/createWithList
 */
export function v2UserCreateWithListByPost(
  data: V2UserCreateWithListRequestTypeByPost,
  extraData: unknown,
  ...args: CurrentRequestFunctionRestArgsType
) {
  return request<V2UserCreateWithListResponseTypeByPost>(
    processRequestFunctionConfig(
      data,
      extraData,
      v2UserCreateWithListByPost.requestConfig
    ),
    ...args
  );
}
v2UserCreateWithListByPost.requestConfig = {
  path: '/v2/user/createWithList',
  method: 'post',
  formDataKeyNameList: [],
  pathParamKeyNameList: [],
  queryStringKeyNameList: []
};

/**
 * @描述 【请求数据接口定义】Get user by user name】
 * @请求头 GET /v2/user/{username}
 */
export interface IV2UserUsernameRequestByGet {
  // The name that needs to be fetched. Use user1 for testing.
  username: string;
}
/**
 * @描述 【响应数据接口定义】Get user by user name】
 * @请求头 GET /v2/user/{username}
 */
export interface IV2UserUsernameResponseByGet {
  id?: number;
  username?: string;
  firstName?: string;
  lastName?: string;
  email?: string;
  password?: string;
  phone?: string;
  // User Status
  userStatus?: number;
}
/**
 * @描述 Get user by user name
 * @请求信息 [ GET ] /v2/user/{username}
 */
export function v2UserUsernameByGet(
  data: IV2UserUsernameRequestByGet,
  extraData: unknown,
  ...args: CurrentRequestFunctionRestArgsType
) {
  return request<IV2UserUsernameResponseByGet>(
    processRequestFunctionConfig(
      data,
      extraData,
      v2UserUsernameByGet.requestConfig
    ),
    ...args
  );
}
v2UserUsernameByGet.requestConfig = {
  path: '/v2/user/{username}',
  method: 'get',
  formDataKeyNameList: [],
  pathParamKeyNameList: ['username'],
  queryStringKeyNameList: []
};

/**
 * @描述 【请求数据接口定义】Updated user、This can only be done by the logged in user.】
 * @请求头 PUT /v2/user/{username}
 */
export interface IV2UserUsernameRequestByPut {
  // name that need to be updated
  username: string;
  id?: number;
  firstName?: string;
  lastName?: string;
  email?: string;
  password?: string;
  phone?: string;
  // User Status
  userStatus?: number;
}
/**
 * @描述 【响应数据类型定义】Updated user、This can only be done by the logged in user.】
 * @请求头 PUT /v2/user/{username}
 */
export type V2UserUsernameResponseTypeByPut = any;
/**
 * @描述 Updated user、This can only be done by the logged in user.
 * @请求信息 [ PUT ] /v2/user/{username}
 */
export function v2UserUsernameByPut(
  data: IV2UserUsernameRequestByPut,
  extraData: unknown,
  ...args: CurrentRequestFunctionRestArgsType
) {
  return request<V2UserUsernameResponseTypeByPut>(
    processRequestFunctionConfig(
      data,
      extraData,
      v2UserUsernameByPut.requestConfig
    ),
    ...args
  );
}
v2UserUsernameByPut.requestConfig = {
  path: '/v2/user/{username}',
  method: 'put',
  formDataKeyNameList: [],
  pathParamKeyNameList: ['username'],
  queryStringKeyNameList: []
};

/**
 * @描述 【请求数据接口定义】Delete user、This can only be done by the logged in user.】
 * @请求头 DELETE /v2/user/{username}
 */
export interface IV2UserUsernameRequestByDelete {
  // The name that needs to be deleted
  username: string;
}
/**
 * @描述 【响应数据类型定义】Delete user、This can only be done by the logged in user.】
 * @请求头 DELETE /v2/user/{username}
 */
export type V2UserUsernameResponseTypeByDelete = any;
/**
 * @描述 Delete user、This can only be done by the logged in user.
 * @请求信息 [ DELETE ] /v2/user/{username}
 */
export function v2UserUsernameByDelete(
  data: IV2UserUsernameRequestByDelete,
  extraData: unknown,
  ...args: CurrentRequestFunctionRestArgsType
) {
  return request<V2UserUsernameResponseTypeByDelete>(
    processRequestFunctionConfig(
      data,
      extraData,
      v2UserUsernameByDelete.requestConfig
    ),
    ...args
  );
}
v2UserUsernameByDelete.requestConfig = {
  path: '/v2/user/{username}',
  method: 'delete',
  formDataKeyNameList: [],
  pathParamKeyNameList: ['username'],
  queryStringKeyNameList: []
};

/**
 * @描述 【请求数据接口定义】Logs user into the system】
 * @请求头 GET /v2/user/login
 */
export interface IV2UserLoginRequestByGet {
  // The user name for login
  username: string;
  // The password for login in clear text
  password: string;
}
/**
 * @描述 【响应数据类型定义】Logs user into the system】
 * @请求头 GET /v2/user/login
 */
export type V2UserLoginResponseByGet = string;
/**
 * @描述 Logs user into the system
 * @请求信息 [ GET ] /v2/user/login
 */
export function v2UserLoginByGet(
  data: IV2UserLoginRequestByGet,
  extraData: unknown,
  ...args: CurrentRequestFunctionRestArgsType
) {
  return request<V2UserLoginResponseByGet>(
    processRequestFunctionConfig(
      data,
      extraData,
      v2UserLoginByGet.requestConfig
    ),
    ...args
  );
}
v2UserLoginByGet.requestConfig = {
  path: '/v2/user/login',
  method: 'get',
  formDataKeyNameList: [],
  pathParamKeyNameList: [],
  queryStringKeyNameList: ['username', 'password']
};

/**
 * @描述 【请求数据类型定义】Logs out current logged in user session】
 * @请求头 GET /v2/user/logout
 */
export type V2UserLogoutRequestTypeByGet = any;
/**
 * @描述 【响应数据类型定义】Logs out current logged in user session】
 * @请求头 GET /v2/user/logout
 */
export type V2UserLogoutResponseTypeByGet = any;
/**
 * @描述 Logs out current logged in user session
 * @请求信息 [ GET ] /v2/user/logout
 */
export function v2UserLogoutByGet(
  data: V2UserLogoutRequestTypeByGet,
  extraData: unknown,
  ...args: CurrentRequestFunctionRestArgsType
) {
  return request<V2UserLogoutResponseTypeByGet>(
    processRequestFunctionConfig(
      data,
      extraData,
      v2UserLogoutByGet.requestConfig
    ),
    ...args
  );
}
v2UserLogoutByGet.requestConfig = {
  path: '/v2/user/logout',
  method: 'get',
  formDataKeyNameList: [],
  pathParamKeyNameList: [],
  queryStringKeyNameList: []
};

/**
 * @描述 【请求数据接口定义】Create user、This can only be done by the logged in user.】
 * @请求头 POST /v2/user
 */
export interface IV2UserRequestByPost {
  id?: number;
  username?: string;
  firstName?: string;
  lastName?: string;
  email?: string;
  password?: string;
  phone?: string;
  // User Status
  userStatus?: number;
}
/**
 * @描述 【响应数据类型定义】Create user、This can only be done by the logged in user.】
 * @请求头 POST /v2/user
 */
export type V2UserResponseTypeByPost = any;
/**
 * @描述 Create user、This can only be done by the logged in user.
 * @请求信息 [ POST ] /v2/user
 */
export function v2UserByPost(
  data: IV2UserRequestByPost,
  extraData: unknown,
  ...args: CurrentRequestFunctionRestArgsType
) {
  return request<V2UserResponseTypeByPost>(
    processRequestFunctionConfig(data, extraData, v2UserByPost.requestConfig),
    ...args
  );
}
v2UserByPost.requestConfig = {
  path: '/v2/user',
  method: 'post',
  formDataKeyNameList: [],
  pathParamKeyNameList: [],
  queryStringKeyNameList: []
};
"
`;
