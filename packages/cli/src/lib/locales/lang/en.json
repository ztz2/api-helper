{
  "正在处理": "Processing item %0",
  "配置已加载：": "Configuration loaded:：",
  "插件已经注册": "The %0 plugin has already been registered.",
  "读取配置文件": "Loading configuration file.",
  "缺少 documentServers 配置": "Missing documentServers configuration.",
  "配置文件不存在，程序退出": "The configuration file does not exist, the program will exit.",
  "未选择接口文档": "No API documentation was selected.",
  "文档获取与解析，这可能需要等待一段时间...": "Interface document acquisition and parsing, This might take a while...",
  "documentServers.url 不可为空!": "documentServers[%0].url cannot be empty!",
  "没有获取或者解析到文档": "No document has been fetched or parsed",
  "接口文档缺少对应类型的解析插件：": "The interface document lacks the corresponding type of parsing plugin: ",
  "代码生成，这可能需要等待一段时间...": "Code is being generated, This might take a while...",
  "文件输出": "Outputting file.",
  "Done. 代码生成成功.": "Done. Code generation was successful.",
  "已生成配置文件.": "The configuration file was created successfully.",
  "配置文件生成失败.": "The creation of the configuration file failed.",
  "请选择配置文件类型？": "Please select the type of configuration file?",
  "检测到已经存在配置文件，是否覆盖已有配置文件？": "An existing configuration file has been detected, do you want to overwrite it?",

  "group": "Use group function. After enabling this function, multi-file code will be generated according to the group",
  "onlyTyping": "Whether to generate only the TypeScript type of interface request data and return data. If yes, the request file and request function will not be generated.",
  "outputPath": "The output path after code generation",
  "target": "The target type of the generated code. Default: typescript",
  "requestFunctionFilePath": "File path of the request function.",
  "requiredRequestField": "Set all fields of the request data as required attributes, default: false",
  "requiredResponseField": "Set all fields of the response data as required attributes, default: true",
  "documentServers": "Interface document service configuration",
  "url": "Interface Document address [When the type is 'swagger', you can read local files, here can be a local file path]",
  "urlValue": "http://your-api-documentation-address.com",
  "type": "Interface document type, call the built-in parser according to the document type, default value: 'swagger' [Built-in yapi and swagger parser, other document types, add parserPlugins to implement document parsing by yourself]",
  "name": "The name of the current interface document service. When there is a value, the file output becomes -> path/current name",
  "dataKey": "The key to get the response data, body[dataKey]",
  "auth": "Access to the document may require authentication information, HTTP Basic Authentication",
  "authToken": "Access to the document may require authentication information, access through token, yapi's verification token",

  "代码生成时间：": "Update time:",
  "提示：该文件由 API Helper CLI 自动生成，请勿直接修改。": "Warning: This file is automatically generated by API Helper CLI, please do not modify it directly.",
  "文档参考：": "Document reference: ",

  "自定义配置": "Custom configuration",
  "请求配置：": "Request configuration parameters.",
  "以axios为例的请求配置": "Request configuration using axios as an example",
  "处理表单数据请求头": "Handling form data request headers",
  "TODO 待实现具体request请求逻辑...": "TODO To implement specific request logic...",
  "先用异步模拟request请求逻辑": "simulate the request logic asynchronously.",
  "请求文件创建失败：": "Request file creation failed: ",
  "documentServers.outputFilePath 属性已经废弃，请使用 documentServers.outputPath": "The documentServers.outputFilePath attribute has been deprecated, please use documentServers.outputPath instead.",
  "documentServers.output 属性已经废弃，请使用 documentServers.outputPath": "",

  "没有获取到swagger配置文档：documentServers[%0].url -> ": "Did not get the swagger configuration document: documentServers[%0].url -> ",
  "解析swagger配置失败：documentServers[%0].url -> ": "Failed to parse swagger configuration: documentServers[%0].url -> ",
  "swagger文件读取失败：": "Failed to load swagger file: ",
  "获取项目基本信息失败：": "Failed to get the basic information of the interface document: ",
  "获取菜单列表失败：": "Failed to get the menu list: ",
  "获取接口列表数据失败：": "Failed to get the interface list data: ",
  "项目接口为空：": "The project interface is empty: ",
  "接口详情获取失败：": "Failed to get interface details: ",
  "解析yapi配置失败：": "Failed to parse Yapi configuration: ",


  "初始化配置": "Initialization configuration",
  "API生成工具": "API generation tool",
  "自定义配置文件路径": "Custom configuration file path",
  "接口文档地址【当type为'swagger'类型时，可以读取本地文件，这里就可以一个本地文件路径】": "Interface document address [Can read local files when type is 'swagger', here can be a local file path]",
  "代码生成后的输出路径": "Output path after code generation",
  "生成的目标代码类型，默认: typescript": "Generated target code type, default: typescript",
  "文档类型，根据文档类型，调用内置的解析器，默认值: 'swagger'": "Interface document type, call the built-in parser according to the document type, default value: 'swagger'",
  "访问文档可能需要认证信息，通过使用token访问，yapi的验证token": "Accessing documents may require authentication information, accessed through using token, yapi's validation token",
  "帮助信息": "\nCommand description:\nInitialize configuration file: apih init\nInitialize configuration file (specify configuration file path): apih init -c path/configuration file.ts\nGenerate code: apih\nGenerate code (specify configuration file): apih -c path/configuration file.ts\nView help: apih -h\n\n# GitHub\nhttps://github.com/ztz2/api-helper\n"
}
