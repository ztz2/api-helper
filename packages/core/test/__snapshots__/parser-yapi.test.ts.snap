// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`yapi-parser yapi-parser文档解析转换测试: yapi-parser文档解析转换测试 1`] = `
[
  {
    "basePath": "/v2",
    "categoryList": [
      {
        "apiList": [
          {
            "cookies": null,
            "description": "",
            "docURL": "",
            "formDataKeyNameList": [],
            "headers": null,
            "id": "",
            "label": "Finds Pets by status",
            "method": "get",
            "path": "/v2/pet/findByStatus",
            "pathParamKeyNameList": [],
            "queryStringKeyNameList": [
              "status",
            ],
            "requestContentType": [],
            "requestDataSchema": ObjectSchema {
              "description": "",
              "enum": [],
              "examples": [],
              "format": "",
              "id": "",
              "keyName": "",
              "label": "",
              "params": [
                StringSchema {
                  "description": "Status values that need to be considered for filter",
                  "enum": [],
                  "examples": [],
                  "format": "",
                  "id": "",
                  "keyName": "status",
                  "label": "Status values that need to be considered for filter",
                  "params": [],
                  "rawType": "",
                  "rules": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "pattern": undefined,
                    "required": true,
                  },
                  "title": "",
                  "type": "string",
                },
              ],
              "rawType": "object",
              "rules": {
                "required": false,
              },
              "title": "",
              "type": "object",
            },
            "requestExtraDataSchema": null,
            "responseContentType": [
              "json",
            ],
            "responseDataSchema": ArraySchema {
              "description": "",
              "enum": [],
              "examples": [],
              "format": "",
              "id": "",
              "keyName": "",
              "label": "",
              "params": [
                ObjectSchema {
                  "description": "",
                  "enum": [],
                  "examples": [],
                  "format": "",
                  "id": "",
                  "keyName": "",
                  "label": "",
                  "params": [
                    NumberSchema {
                      "description": "",
                      "enum": [],
                      "examples": [],
                      "format": "int64",
                      "id": "",
                      "keyName": "id",
                      "label": "",
                      "params": [],
                      "rawType": "integer",
                      "rules": {
                        "exclusiveMaximum": undefined,
                        "exclusiveMinimum": undefined,
                        "maximum": undefined,
                        "minimum": undefined,
                        "multipleOf": undefined,
                        "required": true,
                      },
                      "title": "",
                      "type": "number",
                    },
                    ObjectSchema {
                      "description": "",
                      "enum": [],
                      "examples": [],
                      "format": "",
                      "id": "",
                      "keyName": "category",
                      "label": "",
                      "params": [
                        NumberSchema {
                          "description": "",
                          "enum": [],
                          "examples": [],
                          "format": "int64",
                          "id": "",
                          "keyName": "id",
                          "label": "",
                          "params": [],
                          "rawType": "integer",
                          "rules": {
                            "exclusiveMaximum": undefined,
                            "exclusiveMinimum": undefined,
                            "maximum": undefined,
                            "minimum": undefined,
                            "multipleOf": undefined,
                            "required": true,
                          },
                          "title": "",
                          "type": "number",
                        },
                        StringSchema {
                          "description": "",
                          "enum": [],
                          "examples": [],
                          "format": "",
                          "id": "",
                          "keyName": "name",
                          "label": "",
                          "params": [],
                          "rawType": "string",
                          "rules": {
                            "maxLength": undefined,
                            "minLength": undefined,
                            "pattern": undefined,
                            "required": true,
                          },
                          "title": "",
                          "type": "string",
                        },
                      ],
                      "rawType": "object",
                      "rules": {
                        "required": true,
                      },
                      "title": "",
                      "type": "object",
                    },
                    StringSchema {
                      "description": "",
                      "enum": [],
                      "examples": [],
                      "format": "",
                      "id": "",
                      "keyName": "name",
                      "label": "",
                      "params": [],
                      "rawType": "string",
                      "rules": {
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": undefined,
                        "required": true,
                      },
                      "title": "",
                      "type": "string",
                    },
                    ArraySchema {
                      "description": "",
                      "enum": [],
                      "examples": [],
                      "format": "",
                      "id": "",
                      "keyName": "photoUrls",
                      "label": "",
                      "params": [
                        StringSchema {
                          "description": "",
                          "enum": [],
                          "examples": [],
                          "format": "",
                          "id": "",
                          "keyName": "",
                          "label": "",
                          "params": [],
                          "rawType": "string",
                          "rules": {
                            "maxLength": undefined,
                            "minLength": undefined,
                            "pattern": undefined,
                            "required": true,
                          },
                          "title": "",
                          "type": "string",
                        },
                      ],
                      "rawType": "array",
                      "rules": {
                        "maxLength": undefined,
                        "minLength": undefined,
                        "required": true,
                        "uniqueItems": undefined,
                      },
                      "title": "",
                      "type": "array",
                    },
                    ArraySchema {
                      "description": "",
                      "enum": [],
                      "examples": [],
                      "format": "",
                      "id": "",
                      "keyName": "tags",
                      "label": "",
                      "params": [
                        ObjectSchema {
                          "description": "",
                          "enum": [],
                          "examples": [],
                          "format": "",
                          "id": "",
                          "keyName": "",
                          "label": "",
                          "params": [
                            NumberSchema {
                              "description": "",
                              "enum": [],
                              "examples": [],
                              "format": "int64",
                              "id": "",
                              "keyName": "id",
                              "label": "",
                              "params": [],
                              "rawType": "integer",
                              "rules": {
                                "exclusiveMaximum": undefined,
                                "exclusiveMinimum": undefined,
                                "maximum": undefined,
                                "minimum": undefined,
                                "multipleOf": undefined,
                                "required": true,
                              },
                              "title": "",
                              "type": "number",
                            },
                            StringSchema {
                              "description": "",
                              "enum": [],
                              "examples": [],
                              "format": "",
                              "id": "",
                              "keyName": "name",
                              "label": "",
                              "params": [],
                              "rawType": "string",
                              "rules": {
                                "maxLength": undefined,
                                "minLength": undefined,
                                "pattern": undefined,
                                "required": true,
                              },
                              "title": "",
                              "type": "string",
                            },
                          ],
                          "rawType": "object",
                          "rules": {
                            "required": true,
                          },
                          "title": "",
                          "type": "object",
                        },
                      ],
                      "rawType": "array",
                      "rules": {
                        "maxLength": undefined,
                        "minLength": undefined,
                        "required": true,
                        "uniqueItems": undefined,
                      },
                      "title": "",
                      "type": "array",
                    },
                    StringSchema {
                      "description": "pet status in the store",
                      "enum": [
                        "available",
                        "pending",
                        "sold",
                      ],
                      "examples": [],
                      "format": "",
                      "id": "",
                      "keyName": "status",
                      "label": "pet status in the store",
                      "params": [],
                      "rawType": "string",
                      "rules": {
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": undefined,
                        "required": true,
                      },
                      "title": "",
                      "type": "string",
                    },
                  ],
                  "rawType": "object",
                  "rules": {
                    "required": true,
                  },
                  "title": "",
                  "type": "object",
                },
              ],
              "rawType": "array",
              "rules": {
                "maxLength": undefined,
                "minLength": undefined,
                "required": true,
                "uniqueItems": undefined,
              },
              "title": "",
              "type": "array",
            },
            "title": "Finds Pets by status",
          },
          {
            "cookies": null,
            "description": "",
            "docURL": "",
            "formDataKeyNameList": [
              "additionalMetadata",
              "file",
            ],
            "headers": ObjectSchema {
              "description": "",
              "enum": [],
              "examples": [],
              "format": "",
              "id": "",
              "keyName": "",
              "label": "",
              "params": [
                StringSchema {
                  "description": "",
                  "enum": [],
                  "examples": [],
                  "format": "",
                  "id": "",
                  "keyName": "multipart/form-data",
                  "label": "",
                  "params": [],
                  "rawType": "",
                  "rules": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "pattern": undefined,
                    "required": true,
                  },
                  "title": "",
                  "type": "string",
                },
              ],
              "rawType": "object",
              "rules": {
                "required": false,
              },
              "title": "",
              "type": "object",
            },
            "id": "",
            "label": "uploads an image",
            "method": "post",
            "path": "/v2/pet/{petId}/uploadImage",
            "pathParamKeyNameList": [
              "petId",
            ],
            "queryStringKeyNameList": [],
            "requestContentType": [],
            "requestDataSchema": ObjectSchema {
              "description": "",
              "enum": [],
              "examples": [],
              "format": "",
              "id": "",
              "keyName": "",
              "label": "",
              "params": [
                StringSchema {
                  "description": "ID of pet to update",
                  "enum": [],
                  "examples": [],
                  "format": "",
                  "id": "",
                  "keyName": "petId",
                  "label": "ID of pet to update",
                  "params": [],
                  "rawType": "",
                  "rules": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "pattern": undefined,
                    "required": true,
                  },
                  "title": "",
                  "type": "string",
                },
                StringSchema {
                  "description": "Additional data to pass to server",
                  "enum": [],
                  "examples": [],
                  "format": "",
                  "id": "",
                  "keyName": "additionalMetadata",
                  "label": "Additional data to pass to server",
                  "params": [],
                  "rawType": "text",
                  "rules": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "pattern": undefined,
                    "required": false,
                  },
                  "title": "",
                  "type": "string",
                },
                StringSchema {
                  "description": "file to upload",
                  "enum": [],
                  "examples": [],
                  "format": "",
                  "id": "",
                  "keyName": "file",
                  "label": "file to upload",
                  "params": [],
                  "rawType": "file",
                  "rules": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "pattern": undefined,
                    "required": false,
                  },
                  "title": "",
                  "type": "File",
                },
              ],
              "rawType": "object",
              "rules": {
                "required": false,
              },
              "title": "",
              "type": "object",
            },
            "requestExtraDataSchema": null,
            "responseContentType": [
              "json",
            ],
            "responseDataSchema": ObjectSchema {
              "description": "",
              "enum": [],
              "examples": [],
              "format": "",
              "id": "",
              "keyName": "",
              "label": "",
              "params": [
                NumberSchema {
                  "description": "",
                  "enum": [],
                  "examples": [],
                  "format": "int32",
                  "id": "",
                  "keyName": "code",
                  "label": "",
                  "params": [],
                  "rawType": "integer",
                  "rules": {
                    "exclusiveMaximum": undefined,
                    "exclusiveMinimum": undefined,
                    "maximum": undefined,
                    "minimum": undefined,
                    "multipleOf": undefined,
                    "required": true,
                  },
                  "title": "",
                  "type": "number",
                },
                StringSchema {
                  "description": "",
                  "enum": [],
                  "examples": [],
                  "format": "",
                  "id": "",
                  "keyName": "type",
                  "label": "",
                  "params": [],
                  "rawType": "string",
                  "rules": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "pattern": undefined,
                    "required": true,
                  },
                  "title": "",
                  "type": "string",
                },
                StringSchema {
                  "description": "",
                  "enum": [],
                  "examples": [],
                  "format": "",
                  "id": "",
                  "keyName": "message",
                  "label": "",
                  "params": [],
                  "rawType": "string",
                  "rules": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "pattern": undefined,
                    "required": true,
                  },
                  "title": "",
                  "type": "string",
                },
              ],
              "rawType": "object",
              "rules": {
                "required": true,
              },
              "title": "",
              "type": "object",
            },
            "title": "uploads an image",
          },
          {
            "cookies": null,
            "description": "",
            "docURL": "",
            "formDataKeyNameList": [],
            "headers": ObjectSchema {
              "description": "",
              "enum": [],
              "examples": [],
              "format": "",
              "id": "",
              "keyName": "",
              "label": "",
              "params": [
                StringSchema {
                  "description": "",
                  "enum": [],
                  "examples": [],
                  "format": "",
                  "id": "",
                  "keyName": "application/json",
                  "label": "",
                  "params": [],
                  "rawType": "",
                  "rules": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "pattern": undefined,
                    "required": true,
                  },
                  "title": "",
                  "type": "string",
                },
              ],
              "rawType": "object",
              "rules": {
                "required": false,
              },
              "title": "",
              "type": "object",
            },
            "id": "",
            "label": "Add a new pet to the store",
            "method": "post",
            "path": "/v2/pet",
            "pathParamKeyNameList": [],
            "queryStringKeyNameList": [],
            "requestContentType": [],
            "requestDataSchema": ObjectSchema {
              "description": "",
              "enum": [],
              "examples": [],
              "format": "",
              "id": "",
              "keyName": "",
              "label": "",
              "params": [
                NumberSchema {
                  "description": "",
                  "enum": [],
                  "examples": [],
                  "format": "int64",
                  "id": "",
                  "keyName": "id",
                  "label": "",
                  "params": [],
                  "rawType": "integer",
                  "rules": {
                    "exclusiveMaximum": undefined,
                    "exclusiveMinimum": undefined,
                    "maximum": undefined,
                    "minimum": undefined,
                    "multipleOf": undefined,
                    "required": false,
                  },
                  "title": "",
                  "type": "number",
                },
                ObjectSchema {
                  "description": "",
                  "enum": [],
                  "examples": [],
                  "format": "",
                  "id": "",
                  "keyName": "category",
                  "label": "",
                  "params": [
                    NumberSchema {
                      "description": "",
                      "enum": [],
                      "examples": [],
                      "format": "int64",
                      "id": "",
                      "keyName": "id",
                      "label": "",
                      "params": [],
                      "rawType": "integer",
                      "rules": {
                        "exclusiveMaximum": undefined,
                        "exclusiveMinimum": undefined,
                        "maximum": undefined,
                        "minimum": undefined,
                        "multipleOf": undefined,
                        "required": false,
                      },
                      "title": "",
                      "type": "number",
                    },
                    StringSchema {
                      "description": "",
                      "enum": [],
                      "examples": [],
                      "format": "",
                      "id": "",
                      "keyName": "name",
                      "label": "",
                      "params": [],
                      "rawType": "string",
                      "rules": {
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": undefined,
                        "required": false,
                      },
                      "title": "",
                      "type": "string",
                    },
                  ],
                  "rawType": "object",
                  "rules": {
                    "required": false,
                  },
                  "title": "",
                  "type": "object",
                },
                StringSchema {
                  "description": "",
                  "enum": [],
                  "examples": [],
                  "format": "",
                  "id": "",
                  "keyName": "name",
                  "label": "",
                  "params": [],
                  "rawType": "string",
                  "rules": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "pattern": undefined,
                    "required": true,
                  },
                  "title": "",
                  "type": "string",
                },
                ArraySchema {
                  "description": "",
                  "enum": [],
                  "examples": [],
                  "format": "",
                  "id": "",
                  "keyName": "photoUrls",
                  "label": "",
                  "params": [
                    StringSchema {
                      "description": "",
                      "enum": [],
                      "examples": [],
                      "format": "",
                      "id": "",
                      "keyName": "",
                      "label": "",
                      "params": [],
                      "rawType": "string",
                      "rules": {
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": undefined,
                        "required": false,
                      },
                      "title": "",
                      "type": "string",
                    },
                  ],
                  "rawType": "array",
                  "rules": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "required": true,
                    "uniqueItems": undefined,
                  },
                  "title": "",
                  "type": "array",
                },
                ArraySchema {
                  "description": "",
                  "enum": [],
                  "examples": [],
                  "format": "",
                  "id": "",
                  "keyName": "tags",
                  "label": "",
                  "params": [
                    ObjectSchema {
                      "description": "",
                      "enum": [],
                      "examples": [],
                      "format": "",
                      "id": "",
                      "keyName": "",
                      "label": "",
                      "params": [
                        NumberSchema {
                          "description": "",
                          "enum": [],
                          "examples": [],
                          "format": "int64",
                          "id": "",
                          "keyName": "id",
                          "label": "",
                          "params": [],
                          "rawType": "integer",
                          "rules": {
                            "exclusiveMaximum": undefined,
                            "exclusiveMinimum": undefined,
                            "maximum": undefined,
                            "minimum": undefined,
                            "multipleOf": undefined,
                            "required": false,
                          },
                          "title": "",
                          "type": "number",
                        },
                        StringSchema {
                          "description": "",
                          "enum": [],
                          "examples": [],
                          "format": "",
                          "id": "",
                          "keyName": "name",
                          "label": "",
                          "params": [],
                          "rawType": "string",
                          "rules": {
                            "maxLength": undefined,
                            "minLength": undefined,
                            "pattern": undefined,
                            "required": false,
                          },
                          "title": "",
                          "type": "string",
                        },
                      ],
                      "rawType": "object",
                      "rules": {
                        "required": false,
                      },
                      "title": "",
                      "type": "object",
                    },
                  ],
                  "rawType": "array",
                  "rules": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "required": false,
                    "uniqueItems": undefined,
                  },
                  "title": "",
                  "type": "array",
                },
                StringSchema {
                  "description": "pet status in the store",
                  "enum": [
                    "available",
                    "pending",
                    "sold",
                  ],
                  "examples": [],
                  "format": "",
                  "id": "",
                  "keyName": "status",
                  "label": "pet status in the store",
                  "params": [],
                  "rawType": "string",
                  "rules": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "pattern": undefined,
                    "required": false,
                  },
                  "title": "",
                  "type": "string",
                },
              ],
              "rawType": "object",
              "rules": {
                "required": false,
              },
              "title": "",
              "type": "object",
            },
            "requestExtraDataSchema": null,
            "responseContentType": [
              "raw",
            ],
            "responseDataSchema": null,
            "title": "Add a new pet to the store",
          },
        ],
        "description": "Everything about your Pets",
        "id": "",
        "name": "pet",
      },
      {
        "apiList": [],
        "description": "未设置分组的接口集合",
        "id": "",
        "name": "未知分组",
      },
    ],
    "description": "",
    "documentServerUrl": "",
    "documentVersion": "2.0",
    "id": "",
    "title": "智慧商城",
    "version": "last",
  },
]
`;
