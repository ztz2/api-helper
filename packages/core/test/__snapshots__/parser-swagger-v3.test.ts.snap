// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`swagger-parser v3 cookie-param.json: cookie-param.json 1`] = `
{
  "basePath": "",
  "categoryList": [
    {
      "apiList": [
        {
          "cookies": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [
              StringSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "buid",
                "label": "",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": false,
                },
                "title": "",
                "type": "string",
              },
              ArraySchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "token",
                "label": "",
                "params": [
                  StringSchema {
                    "description": "",
                    "enum": [],
                    "examples": [],
                    "format": "",
                    "id": "",
                    "keyName": "",
                    "label": "",
                    "params": [],
                    "rawType": "string",
                    "rules": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                      "required": false,
                    },
                    "title": "",
                    "type": "string",
                  },
                ],
                "rawType": "array",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "required": false,
                  "uniqueItems": undefined,
                },
                "title": "",
                "type": "array",
              },
            ],
            "rawType": "object",
            "rules": {
              "required": false,
            },
            "title": "",
            "type": "object",
          },
          "description": "",
          "docURL": "",
          "formDataKeyNameList": [],
          "headers": null,
          "id": "",
          "label": "Cookies",
          "method": "get",
          "path": "/cookies",
          "pathParamKeyNameList": [],
          "queryStringKeyNameList": [],
          "requestContentType": [
            "application/json",
          ],
          "requestDataSchema": null,
          "requestExtraDataSchema": null,
          "responseContentType": [],
          "responseDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [],
            "rawType": "object",
            "rules": {
              "required": true,
            },
            "title": "",
            "type": "object",
          },
          "title": "Cookies",
        },
      ],
      "description": "未设置分组的接口集合",
      "id": "",
      "name": "未知分组",
    },
  ],
  "description": "",
  "documentServerUrl": "",
  "documentVersion": "3.0.1",
  "id": "",
  "title": "API HELPER 示例项目",
  "version": "1.0.0",
}
`;

exports[`swagger-parser v3 enum-param.json: enum-param.json 1`] = `
{
  "basePath": "",
  "categoryList": [
    {
      "apiList": [
        {
          "cookies": null,
          "description": "",
          "docURL": "",
          "formDataKeyNameList": [],
          "headers": null,
          "id": "",
          "label": "请求参数 enum",
          "method": "post",
          "path": "/enum",
          "pathParamKeyNameList": [],
          "queryStringKeyNameList": [],
          "requestContentType": [
            "application/json",
          ],
          "requestDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [
              StringSchema {
                "description": "",
                "enum": [
                  "available",
                  "pending",
                  "sold",
                ],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "status1",
                "label": "",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": true,
                },
                "title": "",
                "type": "string",
              },
              ArraySchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "status2",
                "label": "",
                "params": [
                  StringSchema {
                    "description": "",
                    "enum": [
                      "available",
                      "pending",
                      "sold",
                    ],
                    "examples": [],
                    "format": "",
                    "id": "",
                    "keyName": "",
                    "label": "",
                    "params": [],
                    "rawType": "string",
                    "rules": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                      "required": false,
                    },
                    "title": "",
                    "type": "string",
                  },
                ],
                "rawType": "array",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "required": true,
                  "uniqueItems": undefined,
                },
                "title": "",
                "type": "array",
              },
            ],
            "rawType": "object",
            "rules": {
              "required": false,
            },
            "title": "",
            "type": "object",
          },
          "requestExtraDataSchema": null,
          "responseContentType": [],
          "responseDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [],
            "rawType": "object",
            "rules": {
              "required": true,
            },
            "title": "",
            "type": "object",
          },
          "title": "请求参数 enum",
        },
      ],
      "description": "未设置分组的接口集合",
      "id": "",
      "name": "未知分组",
    },
  ],
  "description": "",
  "documentServerUrl": "",
  "documentVersion": "3.0.1",
  "id": "",
  "title": "API HELPER 示例项目",
  "version": "1.0.0",
}
`;

exports[`swagger-parser v3 form-data-param.json: form-data-param.json 1`] = `
{
  "basePath": "",
  "categoryList": [
    {
      "apiList": [
        {
          "cookies": null,
          "description": "",
          "docURL": "",
          "formDataKeyNameList": [
            "file",
          ],
          "headers": null,
          "id": "",
          "label": "请求参数 form-data",
          "method": "post",
          "path": "/form-data",
          "pathParamKeyNameList": [],
          "queryStringKeyNameList": [],
          "requestContentType": [
            "multipart/form-data",
          ],
          "requestDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [
              FileSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "binary",
                "id": "",
                "keyName": "file",
                "label": "",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": false,
                },
                "title": "",
                "type": "File",
              },
            ],
            "rawType": "object",
            "rules": {
              "required": false,
            },
            "title": "",
            "type": "object",
          },
          "requestExtraDataSchema": null,
          "responseContentType": [],
          "responseDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [],
            "rawType": "object",
            "rules": {
              "required": true,
            },
            "title": "",
            "type": "object",
          },
          "title": "请求参数 form-data",
        },
      ],
      "description": "未设置分组的接口集合",
      "id": "",
      "name": "未知分组",
    },
  ],
  "description": "",
  "documentServerUrl": "",
  "documentVersion": "3.0.1",
  "id": "",
  "title": "API HELPER 示例项目",
  "version": "1.0.0",
}
`;

exports[`swagger-parser v3 header-param.json: header-param.json 1`] = `
{
  "basePath": "",
  "categoryList": [
    {
      "apiList": [
        {
          "cookies": null,
          "description": "",
          "docURL": "",
          "formDataKeyNameList": [],
          "headers": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [
              StringSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "token",
                "label": "",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": false,
                },
                "title": "",
                "type": "string",
              },
              ArraySchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "header2",
                "label": "",
                "params": [
                  StringSchema {
                    "description": "",
                    "enum": [],
                    "examples": [],
                    "format": "",
                    "id": "",
                    "keyName": "",
                    "label": "",
                    "params": [],
                    "rawType": "string",
                    "rules": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                      "required": false,
                    },
                    "title": "",
                    "type": "string",
                  },
                ],
                "rawType": "array",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "required": false,
                  "uniqueItems": undefined,
                },
                "title": "",
                "type": "array",
              },
            ],
            "rawType": "object",
            "rules": {
              "required": false,
            },
            "title": "",
            "type": "object",
          },
          "id": "",
          "label": "Headers",
          "method": "get",
          "path": "/headers",
          "pathParamKeyNameList": [],
          "queryStringKeyNameList": [],
          "requestContentType": [
            "application/json",
          ],
          "requestDataSchema": null,
          "requestExtraDataSchema": null,
          "responseContentType": [],
          "responseDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [],
            "rawType": "object",
            "rules": {
              "required": true,
            },
            "title": "",
            "type": "object",
          },
          "title": "Headers",
        },
      ],
      "description": "未设置分组的接口集合",
      "id": "",
      "name": "未知分组",
    },
  ],
  "description": "",
  "documentServerUrl": "",
  "documentVersion": "3.0.1",
  "id": "",
  "title": "API HELPER 示例项目",
  "version": "1.0.0",
}
`;

exports[`swagger-parser v3 json-param.json: json-param.json 1`] = `
{
  "basePath": "",
  "categoryList": [
    {
      "apiList": [
        {
          "cookies": null,
          "description": "",
          "docURL": "",
          "formDataKeyNameList": [],
          "headers": null,
          "id": "",
          "label": "请求参数 json",
          "method": "post",
          "path": "/json",
          "pathParamKeyNameList": [],
          "queryStringKeyNameList": [],
          "requestContentType": [
            "application/json",
          ],
          "requestDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [
              StringSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "username",
                "label": "",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": true,
                },
                "title": "",
                "type": "string",
              },
            ],
            "rawType": "object",
            "rules": {
              "required": false,
            },
            "title": "",
            "type": "object",
          },
          "requestExtraDataSchema": null,
          "responseContentType": [],
          "responseDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [],
            "rawType": "object",
            "rules": {
              "required": true,
            },
            "title": "",
            "type": "object",
          },
          "title": "请求参数 json",
        },
      ],
      "description": "未设置分组的接口集合",
      "id": "",
      "name": "未知分组",
    },
  ],
  "description": "",
  "documentServerUrl": "",
  "documentVersion": "3.0.1",
  "id": "",
  "title": "API HELPER 示例项目",
  "version": "1.0.0",
}
`;

exports[`swagger-parser v3 octet-stream-param.json: octet-stream-param.json 1`] = `
{
  "basePath": "",
  "categoryList": [
    {
      "apiList": [
        {
          "cookies": null,
          "description": "",
          "docURL": "",
          "formDataKeyNameList": [],
          "headers": null,
          "id": "",
          "label": "请求参数 application/octet-stream",
          "method": "post",
          "path": "/application/octet-stream",
          "pathParamKeyNameList": [],
          "queryStringKeyNameList": [],
          "requestContentType": [
            "application/octet-stream",
          ],
          "requestDataSchema": FileSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "binary",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [],
            "rawType": "string",
            "rules": {
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
              "required": false,
            },
            "title": "",
            "type": "File",
          },
          "requestExtraDataSchema": null,
          "responseContentType": [],
          "responseDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [],
            "rawType": "object",
            "rules": {
              "required": true,
            },
            "title": "",
            "type": "object",
          },
          "title": "请求参数 application/octet-stream",
        },
      ],
      "description": "未设置分组的接口集合",
      "id": "",
      "name": "未知分组",
    },
  ],
  "description": "",
  "documentServerUrl": "",
  "documentVersion": "3.0.1",
  "id": "",
  "title": "API HELPER 示例项目",
  "version": "1.0.0",
}
`;

exports[`swagger-parser v3 path-param.json: path-param.json 1`] = `
{
  "basePath": "",
  "categoryList": [
    {
      "apiList": [
        {
          "cookies": null,
          "description": "",
          "docURL": "",
          "formDataKeyNameList": [],
          "headers": null,
          "id": "",
          "label": "请求参数 路径参数",
          "method": "get",
          "path": "/path/{param}",
          "pathParamKeyNameList": [
            "param",
          ],
          "queryStringKeyNameList": [],
          "requestContentType": [
            "application/json",
          ],
          "requestDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [
              StringSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "param",
                "label": "",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": true,
                },
                "title": "",
                "type": "string",
              },
            ],
            "rawType": "object",
            "rules": {
              "required": false,
            },
            "title": "",
            "type": "object",
          },
          "requestExtraDataSchema": null,
          "responseContentType": [],
          "responseDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [],
            "rawType": "object",
            "rules": {
              "required": true,
            },
            "title": "",
            "type": "object",
          },
          "title": "请求参数 路径参数",
        },
      ],
      "description": "未设置分组的接口集合",
      "id": "",
      "name": "未知分组",
    },
  ],
  "description": "",
  "documentServerUrl": "",
  "documentVersion": "3.0.1",
  "id": "",
  "title": "API HELPER 示例项目",
  "version": "1.0.0",
}
`;

exports[`swagger-parser v3 petstore.json: petstore.json 1`] = `
{
  "basePath": "/api/v3",
  "categoryList": [
    {
      "apiList": [
        {
          "cookies": null,
          "description": "Update an existing pet by Id",
          "docURL": "",
          "formDataKeyNameList": [],
          "headers": null,
          "id": "",
          "label": "Update an existing pet",
          "method": "put",
          "path": "/api/v3/pet",
          "pathParamKeyNameList": [],
          "queryStringKeyNameList": [],
          "requestContentType": [
            "application/json",
          ],
          "requestDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [
              NumberSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "int64",
                "id": "",
                "keyName": "id",
                "label": "",
                "params": [],
                "rawType": "integer",
                "rules": {
                  "exclusiveMaximum": undefined,
                  "exclusiveMinimum": undefined,
                  "maximum": undefined,
                  "minimum": undefined,
                  "multipleOf": undefined,
                  "required": false,
                },
                "title": "",
                "type": "number",
              },
              StringSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "name",
                "label": "",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": true,
                },
                "title": "",
                "type": "string",
              },
              ObjectSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "category",
                "label": "",
                "params": [
                  NumberSchema {
                    "description": "",
                    "enum": [],
                    "examples": [],
                    "format": "int64",
                    "id": "",
                    "keyName": "id",
                    "label": "",
                    "params": [],
                    "rawType": "integer",
                    "rules": {
                      "exclusiveMaximum": undefined,
                      "exclusiveMinimum": undefined,
                      "maximum": undefined,
                      "minimum": undefined,
                      "multipleOf": undefined,
                      "required": false,
                    },
                    "title": "",
                    "type": "number",
                  },
                  StringSchema {
                    "description": "",
                    "enum": [],
                    "examples": [],
                    "format": "",
                    "id": "",
                    "keyName": "name",
                    "label": "",
                    "params": [],
                    "rawType": "string",
                    "rules": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                      "required": false,
                    },
                    "title": "",
                    "type": "string",
                  },
                ],
                "rawType": "object",
                "rules": {
                  "required": false,
                },
                "title": "",
                "type": "object",
              },
              ArraySchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "photoUrls",
                "label": "",
                "params": [
                  StringSchema {
                    "description": "",
                    "enum": [],
                    "examples": [],
                    "format": "",
                    "id": "",
                    "keyName": "",
                    "label": "",
                    "params": [],
                    "rawType": "string",
                    "rules": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                      "required": false,
                    },
                    "title": "",
                    "type": "string",
                  },
                ],
                "rawType": "array",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "required": true,
                  "uniqueItems": undefined,
                },
                "title": "",
                "type": "array",
              },
              ArraySchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "tags",
                "label": "",
                "params": [
                  ObjectSchema {
                    "description": "",
                    "enum": [],
                    "examples": [],
                    "format": "",
                    "id": "",
                    "keyName": "",
                    "label": "",
                    "params": [
                      NumberSchema {
                        "description": "",
                        "enum": [],
                        "examples": [],
                        "format": "int64",
                        "id": "",
                        "keyName": "id",
                        "label": "",
                        "params": [],
                        "rawType": "integer",
                        "rules": {
                          "exclusiveMaximum": undefined,
                          "exclusiveMinimum": undefined,
                          "maximum": undefined,
                          "minimum": undefined,
                          "multipleOf": undefined,
                          "required": false,
                        },
                        "title": "",
                        "type": "number",
                      },
                      StringSchema {
                        "description": "",
                        "enum": [],
                        "examples": [],
                        "format": "",
                        "id": "",
                        "keyName": "name",
                        "label": "",
                        "params": [],
                        "rawType": "string",
                        "rules": {
                          "maxLength": undefined,
                          "minLength": undefined,
                          "pattern": undefined,
                          "required": false,
                        },
                        "title": "",
                        "type": "string",
                      },
                    ],
                    "rawType": "object",
                    "rules": {
                      "required": false,
                    },
                    "title": "",
                    "type": "object",
                  },
                ],
                "rawType": "array",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "required": false,
                  "uniqueItems": undefined,
                },
                "title": "",
                "type": "array",
              },
              StringSchema {
                "description": "pet status in the store",
                "enum": [
                  "available",
                  "pending",
                  "sold",
                ],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "status",
                "label": "pet status in the store",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": false,
                },
                "title": "",
                "type": "string",
              },
            ],
            "rawType": "object",
            "rules": {
              "required": false,
            },
            "title": "",
            "type": "object",
          },
          "requestExtraDataSchema": null,
          "responseContentType": [],
          "responseDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [
              NumberSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "int64",
                "id": "",
                "keyName": "id",
                "label": "",
                "params": [],
                "rawType": "integer",
                "rules": {
                  "exclusiveMaximum": undefined,
                  "exclusiveMinimum": undefined,
                  "maximum": undefined,
                  "minimum": undefined,
                  "multipleOf": undefined,
                  "required": true,
                },
                "title": "",
                "type": "number",
              },
              StringSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "name",
                "label": "",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": true,
                },
                "title": "",
                "type": "string",
              },
              ObjectSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "category",
                "label": "",
                "params": [
                  NumberSchema {
                    "description": "",
                    "enum": [],
                    "examples": [],
                    "format": "int64",
                    "id": "",
                    "keyName": "id",
                    "label": "",
                    "params": [],
                    "rawType": "integer",
                    "rules": {
                      "exclusiveMaximum": undefined,
                      "exclusiveMinimum": undefined,
                      "maximum": undefined,
                      "minimum": undefined,
                      "multipleOf": undefined,
                      "required": true,
                    },
                    "title": "",
                    "type": "number",
                  },
                  StringSchema {
                    "description": "",
                    "enum": [],
                    "examples": [],
                    "format": "",
                    "id": "",
                    "keyName": "name",
                    "label": "",
                    "params": [],
                    "rawType": "string",
                    "rules": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                      "required": true,
                    },
                    "title": "",
                    "type": "string",
                  },
                ],
                "rawType": "object",
                "rules": {
                  "required": true,
                },
                "title": "",
                "type": "object",
              },
              ArraySchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "photoUrls",
                "label": "",
                "params": [
                  StringSchema {
                    "description": "",
                    "enum": [],
                    "examples": [],
                    "format": "",
                    "id": "",
                    "keyName": "",
                    "label": "",
                    "params": [],
                    "rawType": "string",
                    "rules": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                      "required": true,
                    },
                    "title": "",
                    "type": "string",
                  },
                ],
                "rawType": "array",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "required": true,
                  "uniqueItems": undefined,
                },
                "title": "",
                "type": "array",
              },
              ArraySchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "tags",
                "label": "",
                "params": [
                  ObjectSchema {
                    "description": "",
                    "enum": [],
                    "examples": [],
                    "format": "",
                    "id": "",
                    "keyName": "",
                    "label": "",
                    "params": [
                      NumberSchema {
                        "description": "",
                        "enum": [],
                        "examples": [],
                        "format": "int64",
                        "id": "",
                        "keyName": "id",
                        "label": "",
                        "params": [],
                        "rawType": "integer",
                        "rules": {
                          "exclusiveMaximum": undefined,
                          "exclusiveMinimum": undefined,
                          "maximum": undefined,
                          "minimum": undefined,
                          "multipleOf": undefined,
                          "required": true,
                        },
                        "title": "",
                        "type": "number",
                      },
                      StringSchema {
                        "description": "",
                        "enum": [],
                        "examples": [],
                        "format": "",
                        "id": "",
                        "keyName": "name",
                        "label": "",
                        "params": [],
                        "rawType": "string",
                        "rules": {
                          "maxLength": undefined,
                          "minLength": undefined,
                          "pattern": undefined,
                          "required": true,
                        },
                        "title": "",
                        "type": "string",
                      },
                    ],
                    "rawType": "object",
                    "rules": {
                      "required": true,
                    },
                    "title": "",
                    "type": "object",
                  },
                ],
                "rawType": "array",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "required": true,
                  "uniqueItems": undefined,
                },
                "title": "",
                "type": "array",
              },
              StringSchema {
                "description": "pet status in the store",
                "enum": [
                  "available",
                  "pending",
                  "sold",
                ],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "status",
                "label": "pet status in the store",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": true,
                },
                "title": "",
                "type": "string",
              },
            ],
            "rawType": "object",
            "rules": {
              "required": true,
            },
            "title": "",
            "type": "object",
          },
          "title": "Update an existing pet",
        },
        {
          "cookies": null,
          "description": "Add a new pet to the store",
          "docURL": "",
          "formDataKeyNameList": [],
          "headers": null,
          "id": "",
          "label": "Add a new pet to the store",
          "method": "post",
          "path": "/api/v3/pet",
          "pathParamKeyNameList": [],
          "queryStringKeyNameList": [],
          "requestContentType": [
            "application/json",
          ],
          "requestDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [
              NumberSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "int64",
                "id": "",
                "keyName": "id",
                "label": "",
                "params": [],
                "rawType": "integer",
                "rules": {
                  "exclusiveMaximum": undefined,
                  "exclusiveMinimum": undefined,
                  "maximum": undefined,
                  "minimum": undefined,
                  "multipleOf": undefined,
                  "required": false,
                },
                "title": "",
                "type": "number",
              },
              StringSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "name",
                "label": "",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": true,
                },
                "title": "",
                "type": "string",
              },
              ObjectSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "category",
                "label": "",
                "params": [
                  NumberSchema {
                    "description": "",
                    "enum": [],
                    "examples": [],
                    "format": "int64",
                    "id": "",
                    "keyName": "id",
                    "label": "",
                    "params": [],
                    "rawType": "integer",
                    "rules": {
                      "exclusiveMaximum": undefined,
                      "exclusiveMinimum": undefined,
                      "maximum": undefined,
                      "minimum": undefined,
                      "multipleOf": undefined,
                      "required": false,
                    },
                    "title": "",
                    "type": "number",
                  },
                  StringSchema {
                    "description": "",
                    "enum": [],
                    "examples": [],
                    "format": "",
                    "id": "",
                    "keyName": "name",
                    "label": "",
                    "params": [],
                    "rawType": "string",
                    "rules": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                      "required": false,
                    },
                    "title": "",
                    "type": "string",
                  },
                ],
                "rawType": "object",
                "rules": {
                  "required": false,
                },
                "title": "",
                "type": "object",
              },
              ArraySchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "photoUrls",
                "label": "",
                "params": [
                  StringSchema {
                    "description": "",
                    "enum": [],
                    "examples": [],
                    "format": "",
                    "id": "",
                    "keyName": "",
                    "label": "",
                    "params": [],
                    "rawType": "string",
                    "rules": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                      "required": false,
                    },
                    "title": "",
                    "type": "string",
                  },
                ],
                "rawType": "array",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "required": true,
                  "uniqueItems": undefined,
                },
                "title": "",
                "type": "array",
              },
              ArraySchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "tags",
                "label": "",
                "params": [
                  ObjectSchema {
                    "description": "",
                    "enum": [],
                    "examples": [],
                    "format": "",
                    "id": "",
                    "keyName": "",
                    "label": "",
                    "params": [
                      NumberSchema {
                        "description": "",
                        "enum": [],
                        "examples": [],
                        "format": "int64",
                        "id": "",
                        "keyName": "id",
                        "label": "",
                        "params": [],
                        "rawType": "integer",
                        "rules": {
                          "exclusiveMaximum": undefined,
                          "exclusiveMinimum": undefined,
                          "maximum": undefined,
                          "minimum": undefined,
                          "multipleOf": undefined,
                          "required": false,
                        },
                        "title": "",
                        "type": "number",
                      },
                      StringSchema {
                        "description": "",
                        "enum": [],
                        "examples": [],
                        "format": "",
                        "id": "",
                        "keyName": "name",
                        "label": "",
                        "params": [],
                        "rawType": "string",
                        "rules": {
                          "maxLength": undefined,
                          "minLength": undefined,
                          "pattern": undefined,
                          "required": false,
                        },
                        "title": "",
                        "type": "string",
                      },
                    ],
                    "rawType": "object",
                    "rules": {
                      "required": false,
                    },
                    "title": "",
                    "type": "object",
                  },
                ],
                "rawType": "array",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "required": false,
                  "uniqueItems": undefined,
                },
                "title": "",
                "type": "array",
              },
              StringSchema {
                "description": "pet status in the store",
                "enum": [
                  "available",
                  "pending",
                  "sold",
                ],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "status",
                "label": "pet status in the store",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": false,
                },
                "title": "",
                "type": "string",
              },
            ],
            "rawType": "object",
            "rules": {
              "required": false,
            },
            "title": "",
            "type": "object",
          },
          "requestExtraDataSchema": null,
          "responseContentType": [],
          "responseDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [
              NumberSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "int64",
                "id": "",
                "keyName": "id",
                "label": "",
                "params": [],
                "rawType": "integer",
                "rules": {
                  "exclusiveMaximum": undefined,
                  "exclusiveMinimum": undefined,
                  "maximum": undefined,
                  "minimum": undefined,
                  "multipleOf": undefined,
                  "required": true,
                },
                "title": "",
                "type": "number",
              },
              StringSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "name",
                "label": "",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": true,
                },
                "title": "",
                "type": "string",
              },
              ObjectSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "category",
                "label": "",
                "params": [
                  NumberSchema {
                    "description": "",
                    "enum": [],
                    "examples": [],
                    "format": "int64",
                    "id": "",
                    "keyName": "id",
                    "label": "",
                    "params": [],
                    "rawType": "integer",
                    "rules": {
                      "exclusiveMaximum": undefined,
                      "exclusiveMinimum": undefined,
                      "maximum": undefined,
                      "minimum": undefined,
                      "multipleOf": undefined,
                      "required": true,
                    },
                    "title": "",
                    "type": "number",
                  },
                  StringSchema {
                    "description": "",
                    "enum": [],
                    "examples": [],
                    "format": "",
                    "id": "",
                    "keyName": "name",
                    "label": "",
                    "params": [],
                    "rawType": "string",
                    "rules": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                      "required": true,
                    },
                    "title": "",
                    "type": "string",
                  },
                ],
                "rawType": "object",
                "rules": {
                  "required": true,
                },
                "title": "",
                "type": "object",
              },
              ArraySchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "photoUrls",
                "label": "",
                "params": [
                  StringSchema {
                    "description": "",
                    "enum": [],
                    "examples": [],
                    "format": "",
                    "id": "",
                    "keyName": "",
                    "label": "",
                    "params": [],
                    "rawType": "string",
                    "rules": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                      "required": true,
                    },
                    "title": "",
                    "type": "string",
                  },
                ],
                "rawType": "array",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "required": true,
                  "uniqueItems": undefined,
                },
                "title": "",
                "type": "array",
              },
              ArraySchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "tags",
                "label": "",
                "params": [
                  ObjectSchema {
                    "description": "",
                    "enum": [],
                    "examples": [],
                    "format": "",
                    "id": "",
                    "keyName": "",
                    "label": "",
                    "params": [
                      NumberSchema {
                        "description": "",
                        "enum": [],
                        "examples": [],
                        "format": "int64",
                        "id": "",
                        "keyName": "id",
                        "label": "",
                        "params": [],
                        "rawType": "integer",
                        "rules": {
                          "exclusiveMaximum": undefined,
                          "exclusiveMinimum": undefined,
                          "maximum": undefined,
                          "minimum": undefined,
                          "multipleOf": undefined,
                          "required": true,
                        },
                        "title": "",
                        "type": "number",
                      },
                      StringSchema {
                        "description": "",
                        "enum": [],
                        "examples": [],
                        "format": "",
                        "id": "",
                        "keyName": "name",
                        "label": "",
                        "params": [],
                        "rawType": "string",
                        "rules": {
                          "maxLength": undefined,
                          "minLength": undefined,
                          "pattern": undefined,
                          "required": true,
                        },
                        "title": "",
                        "type": "string",
                      },
                    ],
                    "rawType": "object",
                    "rules": {
                      "required": true,
                    },
                    "title": "",
                    "type": "object",
                  },
                ],
                "rawType": "array",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "required": true,
                  "uniqueItems": undefined,
                },
                "title": "",
                "type": "array",
              },
              StringSchema {
                "description": "pet status in the store",
                "enum": [
                  "available",
                  "pending",
                  "sold",
                ],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "status",
                "label": "pet status in the store",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": true,
                },
                "title": "",
                "type": "string",
              },
            ],
            "rawType": "object",
            "rules": {
              "required": true,
            },
            "title": "",
            "type": "object",
          },
          "title": "Add a new pet to the store",
        },
        {
          "cookies": null,
          "description": "Multiple status values can be provided with comma separated strings",
          "docURL": "",
          "formDataKeyNameList": [],
          "headers": null,
          "id": "",
          "label": "Finds Pets by status",
          "method": "get",
          "path": "/api/v3/pet/findByStatus",
          "pathParamKeyNameList": [],
          "queryStringKeyNameList": [
            "status",
          ],
          "requestContentType": [
            "application/json",
          ],
          "requestDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [
              StringSchema {
                "description": "Status values that need to be considered for filter",
                "enum": [
                  "available",
                  "pending",
                  "sold",
                ],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "status",
                "label": "Status values that need to be considered for filter",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": false,
                },
                "title": "",
                "type": "string",
              },
            ],
            "rawType": "object",
            "rules": {
              "required": false,
            },
            "title": "",
            "type": "object",
          },
          "requestExtraDataSchema": null,
          "responseContentType": [],
          "responseDataSchema": ArraySchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [
              ObjectSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "",
                "label": "",
                "params": [
                  NumberSchema {
                    "description": "",
                    "enum": [],
                    "examples": [],
                    "format": "int64",
                    "id": "",
                    "keyName": "id",
                    "label": "",
                    "params": [],
                    "rawType": "integer",
                    "rules": {
                      "exclusiveMaximum": undefined,
                      "exclusiveMinimum": undefined,
                      "maximum": undefined,
                      "minimum": undefined,
                      "multipleOf": undefined,
                      "required": true,
                    },
                    "title": "",
                    "type": "number",
                  },
                  StringSchema {
                    "description": "",
                    "enum": [],
                    "examples": [],
                    "format": "",
                    "id": "",
                    "keyName": "name",
                    "label": "",
                    "params": [],
                    "rawType": "string",
                    "rules": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                      "required": true,
                    },
                    "title": "",
                    "type": "string",
                  },
                  ObjectSchema {
                    "description": "",
                    "enum": [],
                    "examples": [],
                    "format": "",
                    "id": "",
                    "keyName": "category",
                    "label": "",
                    "params": [
                      NumberSchema {
                        "description": "",
                        "enum": [],
                        "examples": [],
                        "format": "int64",
                        "id": "",
                        "keyName": "id",
                        "label": "",
                        "params": [],
                        "rawType": "integer",
                        "rules": {
                          "exclusiveMaximum": undefined,
                          "exclusiveMinimum": undefined,
                          "maximum": undefined,
                          "minimum": undefined,
                          "multipleOf": undefined,
                          "required": true,
                        },
                        "title": "",
                        "type": "number",
                      },
                      StringSchema {
                        "description": "",
                        "enum": [],
                        "examples": [],
                        "format": "",
                        "id": "",
                        "keyName": "name",
                        "label": "",
                        "params": [],
                        "rawType": "string",
                        "rules": {
                          "maxLength": undefined,
                          "minLength": undefined,
                          "pattern": undefined,
                          "required": true,
                        },
                        "title": "",
                        "type": "string",
                      },
                    ],
                    "rawType": "object",
                    "rules": {
                      "required": true,
                    },
                    "title": "",
                    "type": "object",
                  },
                  ArraySchema {
                    "description": "",
                    "enum": [],
                    "examples": [],
                    "format": "",
                    "id": "",
                    "keyName": "photoUrls",
                    "label": "",
                    "params": [
                      StringSchema {
                        "description": "",
                        "enum": [],
                        "examples": [],
                        "format": "",
                        "id": "",
                        "keyName": "",
                        "label": "",
                        "params": [],
                        "rawType": "string",
                        "rules": {
                          "maxLength": undefined,
                          "minLength": undefined,
                          "pattern": undefined,
                          "required": true,
                        },
                        "title": "",
                        "type": "string",
                      },
                    ],
                    "rawType": "array",
                    "rules": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "required": true,
                      "uniqueItems": undefined,
                    },
                    "title": "",
                    "type": "array",
                  },
                  ArraySchema {
                    "description": "",
                    "enum": [],
                    "examples": [],
                    "format": "",
                    "id": "",
                    "keyName": "tags",
                    "label": "",
                    "params": [
                      ObjectSchema {
                        "description": "",
                        "enum": [],
                        "examples": [],
                        "format": "",
                        "id": "",
                        "keyName": "",
                        "label": "",
                        "params": [
                          NumberSchema {
                            "description": "",
                            "enum": [],
                            "examples": [],
                            "format": "int64",
                            "id": "",
                            "keyName": "id",
                            "label": "",
                            "params": [],
                            "rawType": "integer",
                            "rules": {
                              "exclusiveMaximum": undefined,
                              "exclusiveMinimum": undefined,
                              "maximum": undefined,
                              "minimum": undefined,
                              "multipleOf": undefined,
                              "required": true,
                            },
                            "title": "",
                            "type": "number",
                          },
                          StringSchema {
                            "description": "",
                            "enum": [],
                            "examples": [],
                            "format": "",
                            "id": "",
                            "keyName": "name",
                            "label": "",
                            "params": [],
                            "rawType": "string",
                            "rules": {
                              "maxLength": undefined,
                              "minLength": undefined,
                              "pattern": undefined,
                              "required": true,
                            },
                            "title": "",
                            "type": "string",
                          },
                        ],
                        "rawType": "object",
                        "rules": {
                          "required": true,
                        },
                        "title": "",
                        "type": "object",
                      },
                    ],
                    "rawType": "array",
                    "rules": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "required": true,
                      "uniqueItems": undefined,
                    },
                    "title": "",
                    "type": "array",
                  },
                  StringSchema {
                    "description": "pet status in the store",
                    "enum": [
                      "available",
                      "pending",
                      "sold",
                    ],
                    "examples": [],
                    "format": "",
                    "id": "",
                    "keyName": "status",
                    "label": "pet status in the store",
                    "params": [],
                    "rawType": "string",
                    "rules": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                      "required": true,
                    },
                    "title": "",
                    "type": "string",
                  },
                ],
                "rawType": "object",
                "rules": {
                  "required": true,
                },
                "title": "",
                "type": "object",
              },
            ],
            "rawType": "array",
            "rules": {
              "maxLength": undefined,
              "minLength": undefined,
              "required": true,
              "uniqueItems": undefined,
            },
            "title": "",
            "type": "array",
          },
          "title": "Finds Pets by status",
        },
        {
          "cookies": null,
          "description": "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.",
          "docURL": "",
          "formDataKeyNameList": [],
          "headers": null,
          "id": "",
          "label": "Finds Pets by tags",
          "method": "get",
          "path": "/api/v3/pet/findByTags",
          "pathParamKeyNameList": [],
          "queryStringKeyNameList": [
            "tags",
          ],
          "requestContentType": [
            "application/json",
          ],
          "requestDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [
              ArraySchema {
                "description": "Tags to filter by",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "tags",
                "label": "Tags to filter by",
                "params": [
                  StringSchema {
                    "description": "",
                    "enum": [],
                    "examples": [],
                    "format": "",
                    "id": "",
                    "keyName": "",
                    "label": "",
                    "params": [],
                    "rawType": "string",
                    "rules": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                      "required": false,
                    },
                    "title": "",
                    "type": "string",
                  },
                ],
                "rawType": "array",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "required": false,
                  "uniqueItems": undefined,
                },
                "title": "",
                "type": "array",
              },
            ],
            "rawType": "object",
            "rules": {
              "required": false,
            },
            "title": "",
            "type": "object",
          },
          "requestExtraDataSchema": null,
          "responseContentType": [],
          "responseDataSchema": ArraySchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [
              ObjectSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "",
                "label": "",
                "params": [
                  NumberSchema {
                    "description": "",
                    "enum": [],
                    "examples": [],
                    "format": "int64",
                    "id": "",
                    "keyName": "id",
                    "label": "",
                    "params": [],
                    "rawType": "integer",
                    "rules": {
                      "exclusiveMaximum": undefined,
                      "exclusiveMinimum": undefined,
                      "maximum": undefined,
                      "minimum": undefined,
                      "multipleOf": undefined,
                      "required": true,
                    },
                    "title": "",
                    "type": "number",
                  },
                  StringSchema {
                    "description": "",
                    "enum": [],
                    "examples": [],
                    "format": "",
                    "id": "",
                    "keyName": "name",
                    "label": "",
                    "params": [],
                    "rawType": "string",
                    "rules": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                      "required": true,
                    },
                    "title": "",
                    "type": "string",
                  },
                  ObjectSchema {
                    "description": "",
                    "enum": [],
                    "examples": [],
                    "format": "",
                    "id": "",
                    "keyName": "category",
                    "label": "",
                    "params": [
                      NumberSchema {
                        "description": "",
                        "enum": [],
                        "examples": [],
                        "format": "int64",
                        "id": "",
                        "keyName": "id",
                        "label": "",
                        "params": [],
                        "rawType": "integer",
                        "rules": {
                          "exclusiveMaximum": undefined,
                          "exclusiveMinimum": undefined,
                          "maximum": undefined,
                          "minimum": undefined,
                          "multipleOf": undefined,
                          "required": true,
                        },
                        "title": "",
                        "type": "number",
                      },
                      StringSchema {
                        "description": "",
                        "enum": [],
                        "examples": [],
                        "format": "",
                        "id": "",
                        "keyName": "name",
                        "label": "",
                        "params": [],
                        "rawType": "string",
                        "rules": {
                          "maxLength": undefined,
                          "minLength": undefined,
                          "pattern": undefined,
                          "required": true,
                        },
                        "title": "",
                        "type": "string",
                      },
                    ],
                    "rawType": "object",
                    "rules": {
                      "required": true,
                    },
                    "title": "",
                    "type": "object",
                  },
                  ArraySchema {
                    "description": "",
                    "enum": [],
                    "examples": [],
                    "format": "",
                    "id": "",
                    "keyName": "photoUrls",
                    "label": "",
                    "params": [
                      StringSchema {
                        "description": "",
                        "enum": [],
                        "examples": [],
                        "format": "",
                        "id": "",
                        "keyName": "",
                        "label": "",
                        "params": [],
                        "rawType": "string",
                        "rules": {
                          "maxLength": undefined,
                          "minLength": undefined,
                          "pattern": undefined,
                          "required": true,
                        },
                        "title": "",
                        "type": "string",
                      },
                    ],
                    "rawType": "array",
                    "rules": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "required": true,
                      "uniqueItems": undefined,
                    },
                    "title": "",
                    "type": "array",
                  },
                  ArraySchema {
                    "description": "",
                    "enum": [],
                    "examples": [],
                    "format": "",
                    "id": "",
                    "keyName": "tags",
                    "label": "",
                    "params": [
                      ObjectSchema {
                        "description": "",
                        "enum": [],
                        "examples": [],
                        "format": "",
                        "id": "",
                        "keyName": "",
                        "label": "",
                        "params": [
                          NumberSchema {
                            "description": "",
                            "enum": [],
                            "examples": [],
                            "format": "int64",
                            "id": "",
                            "keyName": "id",
                            "label": "",
                            "params": [],
                            "rawType": "integer",
                            "rules": {
                              "exclusiveMaximum": undefined,
                              "exclusiveMinimum": undefined,
                              "maximum": undefined,
                              "minimum": undefined,
                              "multipleOf": undefined,
                              "required": true,
                            },
                            "title": "",
                            "type": "number",
                          },
                          StringSchema {
                            "description": "",
                            "enum": [],
                            "examples": [],
                            "format": "",
                            "id": "",
                            "keyName": "name",
                            "label": "",
                            "params": [],
                            "rawType": "string",
                            "rules": {
                              "maxLength": undefined,
                              "minLength": undefined,
                              "pattern": undefined,
                              "required": true,
                            },
                            "title": "",
                            "type": "string",
                          },
                        ],
                        "rawType": "object",
                        "rules": {
                          "required": true,
                        },
                        "title": "",
                        "type": "object",
                      },
                    ],
                    "rawType": "array",
                    "rules": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "required": true,
                      "uniqueItems": undefined,
                    },
                    "title": "",
                    "type": "array",
                  },
                  StringSchema {
                    "description": "pet status in the store",
                    "enum": [
                      "available",
                      "pending",
                      "sold",
                    ],
                    "examples": [],
                    "format": "",
                    "id": "",
                    "keyName": "status",
                    "label": "pet status in the store",
                    "params": [],
                    "rawType": "string",
                    "rules": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                      "required": true,
                    },
                    "title": "",
                    "type": "string",
                  },
                ],
                "rawType": "object",
                "rules": {
                  "required": true,
                },
                "title": "",
                "type": "object",
              },
            ],
            "rawType": "array",
            "rules": {
              "maxLength": undefined,
              "minLength": undefined,
              "required": true,
              "uniqueItems": undefined,
            },
            "title": "",
            "type": "array",
          },
          "title": "Finds Pets by tags",
        },
        {
          "cookies": null,
          "description": "Returns a single pet",
          "docURL": "",
          "formDataKeyNameList": [],
          "headers": null,
          "id": "",
          "label": "Find pet by ID",
          "method": "get",
          "path": "/api/v3/pet/{petId}",
          "pathParamKeyNameList": [
            "petId",
          ],
          "queryStringKeyNameList": [],
          "requestContentType": [
            "application/json",
          ],
          "requestDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [
              NumberSchema {
                "description": "ID of pet to return",
                "enum": [],
                "examples": [],
                "format": "int64",
                "id": "",
                "keyName": "petId",
                "label": "ID of pet to return",
                "params": [],
                "rawType": "integer",
                "rules": {
                  "exclusiveMaximum": undefined,
                  "exclusiveMinimum": undefined,
                  "maximum": undefined,
                  "minimum": undefined,
                  "multipleOf": undefined,
                  "required": true,
                },
                "title": "",
                "type": "number",
              },
            ],
            "rawType": "object",
            "rules": {
              "required": false,
            },
            "title": "",
            "type": "object",
          },
          "requestExtraDataSchema": null,
          "responseContentType": [],
          "responseDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [
              NumberSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "int64",
                "id": "",
                "keyName": "id",
                "label": "",
                "params": [],
                "rawType": "integer",
                "rules": {
                  "exclusiveMaximum": undefined,
                  "exclusiveMinimum": undefined,
                  "maximum": undefined,
                  "minimum": undefined,
                  "multipleOf": undefined,
                  "required": true,
                },
                "title": "",
                "type": "number",
              },
              StringSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "name",
                "label": "",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": true,
                },
                "title": "",
                "type": "string",
              },
              ObjectSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "category",
                "label": "",
                "params": [
                  NumberSchema {
                    "description": "",
                    "enum": [],
                    "examples": [],
                    "format": "int64",
                    "id": "",
                    "keyName": "id",
                    "label": "",
                    "params": [],
                    "rawType": "integer",
                    "rules": {
                      "exclusiveMaximum": undefined,
                      "exclusiveMinimum": undefined,
                      "maximum": undefined,
                      "minimum": undefined,
                      "multipleOf": undefined,
                      "required": true,
                    },
                    "title": "",
                    "type": "number",
                  },
                  StringSchema {
                    "description": "",
                    "enum": [],
                    "examples": [],
                    "format": "",
                    "id": "",
                    "keyName": "name",
                    "label": "",
                    "params": [],
                    "rawType": "string",
                    "rules": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                      "required": true,
                    },
                    "title": "",
                    "type": "string",
                  },
                ],
                "rawType": "object",
                "rules": {
                  "required": true,
                },
                "title": "",
                "type": "object",
              },
              ArraySchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "photoUrls",
                "label": "",
                "params": [
                  StringSchema {
                    "description": "",
                    "enum": [],
                    "examples": [],
                    "format": "",
                    "id": "",
                    "keyName": "",
                    "label": "",
                    "params": [],
                    "rawType": "string",
                    "rules": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                      "required": true,
                    },
                    "title": "",
                    "type": "string",
                  },
                ],
                "rawType": "array",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "required": true,
                  "uniqueItems": undefined,
                },
                "title": "",
                "type": "array",
              },
              ArraySchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "tags",
                "label": "",
                "params": [
                  ObjectSchema {
                    "description": "",
                    "enum": [],
                    "examples": [],
                    "format": "",
                    "id": "",
                    "keyName": "",
                    "label": "",
                    "params": [
                      NumberSchema {
                        "description": "",
                        "enum": [],
                        "examples": [],
                        "format": "int64",
                        "id": "",
                        "keyName": "id",
                        "label": "",
                        "params": [],
                        "rawType": "integer",
                        "rules": {
                          "exclusiveMaximum": undefined,
                          "exclusiveMinimum": undefined,
                          "maximum": undefined,
                          "minimum": undefined,
                          "multipleOf": undefined,
                          "required": true,
                        },
                        "title": "",
                        "type": "number",
                      },
                      StringSchema {
                        "description": "",
                        "enum": [],
                        "examples": [],
                        "format": "",
                        "id": "",
                        "keyName": "name",
                        "label": "",
                        "params": [],
                        "rawType": "string",
                        "rules": {
                          "maxLength": undefined,
                          "minLength": undefined,
                          "pattern": undefined,
                          "required": true,
                        },
                        "title": "",
                        "type": "string",
                      },
                    ],
                    "rawType": "object",
                    "rules": {
                      "required": true,
                    },
                    "title": "",
                    "type": "object",
                  },
                ],
                "rawType": "array",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "required": true,
                  "uniqueItems": undefined,
                },
                "title": "",
                "type": "array",
              },
              StringSchema {
                "description": "pet status in the store",
                "enum": [
                  "available",
                  "pending",
                  "sold",
                ],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "status",
                "label": "pet status in the store",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": true,
                },
                "title": "",
                "type": "string",
              },
            ],
            "rawType": "object",
            "rules": {
              "required": true,
            },
            "title": "",
            "type": "object",
          },
          "title": "Find pet by ID",
        },
        {
          "cookies": null,
          "description": "",
          "docURL": "",
          "formDataKeyNameList": [],
          "headers": null,
          "id": "",
          "label": "Updates a pet in the store with form data",
          "method": "post",
          "path": "/api/v3/pet/{petId}",
          "pathParamKeyNameList": [
            "petId",
          ],
          "queryStringKeyNameList": [
            "name",
            "status",
          ],
          "requestContentType": [],
          "requestDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [
              NumberSchema {
                "description": "ID of pet that needs to be updated",
                "enum": [],
                "examples": [],
                "format": "int64",
                "id": "",
                "keyName": "petId",
                "label": "ID of pet that needs to be updated",
                "params": [],
                "rawType": "integer",
                "rules": {
                  "exclusiveMaximum": undefined,
                  "exclusiveMinimum": undefined,
                  "maximum": undefined,
                  "minimum": undefined,
                  "multipleOf": undefined,
                  "required": true,
                },
                "title": "",
                "type": "number",
              },
              StringSchema {
                "description": "Name of pet that needs to be updated",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "name",
                "label": "Name of pet that needs to be updated",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": false,
                },
                "title": "",
                "type": "string",
              },
              StringSchema {
                "description": "Status of pet that needs to be updated",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "status",
                "label": "Status of pet that needs to be updated",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": false,
                },
                "title": "",
                "type": "string",
              },
            ],
            "rawType": "object",
            "rules": {
              "required": false,
            },
            "title": "",
            "type": "object",
          },
          "requestExtraDataSchema": null,
          "responseContentType": [],
          "responseDataSchema": null,
          "title": "Updates a pet in the store with form data",
        },
        {
          "cookies": null,
          "description": "",
          "docURL": "",
          "formDataKeyNameList": [],
          "headers": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [
              StringSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "api_key",
                "label": "",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": false,
                },
                "title": "",
                "type": "string",
              },
            ],
            "rawType": "object",
            "rules": {
              "required": false,
            },
            "title": "",
            "type": "object",
          },
          "id": "",
          "label": "Deletes a pet",
          "method": "delete",
          "path": "/api/v3/pet/{petId}",
          "pathParamKeyNameList": [
            "petId",
          ],
          "queryStringKeyNameList": [],
          "requestContentType": [],
          "requestDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [
              NumberSchema {
                "description": "Pet id to delete",
                "enum": [],
                "examples": [],
                "format": "int64",
                "id": "",
                "keyName": "petId",
                "label": "Pet id to delete",
                "params": [],
                "rawType": "integer",
                "rules": {
                  "exclusiveMaximum": undefined,
                  "exclusiveMinimum": undefined,
                  "maximum": undefined,
                  "minimum": undefined,
                  "multipleOf": undefined,
                  "required": true,
                },
                "title": "",
                "type": "number",
              },
            ],
            "rawType": "object",
            "rules": {
              "required": false,
            },
            "title": "",
            "type": "object",
          },
          "requestExtraDataSchema": null,
          "responseContentType": [],
          "responseDataSchema": null,
          "title": "Deletes a pet",
        },
        {
          "cookies": null,
          "description": "",
          "docURL": "",
          "formDataKeyNameList": [],
          "headers": null,
          "id": "",
          "label": "uploads an image",
          "method": "post",
          "path": "/api/v3/pet/{petId}/uploadImage",
          "pathParamKeyNameList": [
            "petId",
          ],
          "queryStringKeyNameList": [
            "additionalMetadata",
          ],
          "requestContentType": [
            "application/octet-stream",
          ],
          "requestDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [
              NumberSchema {
                "description": "ID of pet to update",
                "enum": [],
                "examples": [],
                "format": "int64",
                "id": "",
                "keyName": "petId",
                "label": "ID of pet to update",
                "params": [],
                "rawType": "integer",
                "rules": {
                  "exclusiveMaximum": undefined,
                  "exclusiveMinimum": undefined,
                  "maximum": undefined,
                  "minimum": undefined,
                  "multipleOf": undefined,
                  "required": true,
                },
                "title": "",
                "type": "number",
              },
              StringSchema {
                "description": "Additional Metadata",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "additionalMetadata",
                "label": "Additional Metadata",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": false,
                },
                "title": "",
                "type": "string",
              },
            ],
            "rawType": "object",
            "rules": {
              "required": false,
            },
            "title": "",
            "type": "object",
          },
          "requestExtraDataSchema": null,
          "responseContentType": [],
          "responseDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [
              NumberSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "int32",
                "id": "",
                "keyName": "code",
                "label": "",
                "params": [],
                "rawType": "integer",
                "rules": {
                  "exclusiveMaximum": undefined,
                  "exclusiveMinimum": undefined,
                  "maximum": undefined,
                  "minimum": undefined,
                  "multipleOf": undefined,
                  "required": true,
                },
                "title": "",
                "type": "number",
              },
              StringSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "type",
                "label": "",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": true,
                },
                "title": "",
                "type": "string",
              },
              StringSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "message",
                "label": "",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": true,
                },
                "title": "",
                "type": "string",
              },
            ],
            "rawType": "object",
            "rules": {
              "required": true,
            },
            "title": "",
            "type": "object",
          },
          "title": "uploads an image",
        },
      ],
      "description": "Everything about your Pets",
      "id": "",
      "name": "pet",
    },
    {
      "apiList": [
        {
          "cookies": null,
          "description": "Returns a map of status codes to quantities",
          "docURL": "",
          "formDataKeyNameList": [],
          "headers": null,
          "id": "",
          "label": "Returns pet inventories by status",
          "method": "get",
          "path": "/api/v3/store/inventory",
          "pathParamKeyNameList": [],
          "queryStringKeyNameList": [],
          "requestContentType": [
            "application/json",
          ],
          "requestDataSchema": null,
          "requestExtraDataSchema": null,
          "responseContentType": [],
          "responseDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [],
            "rawType": "object",
            "rules": {
              "required": true,
            },
            "title": "",
            "type": "object",
          },
          "title": "Returns pet inventories by status",
        },
        {
          "cookies": null,
          "description": "Place a new order in the store",
          "docURL": "",
          "formDataKeyNameList": [],
          "headers": null,
          "id": "",
          "label": "Place an order for a pet",
          "method": "post",
          "path": "/api/v3/store/order",
          "pathParamKeyNameList": [],
          "queryStringKeyNameList": [],
          "requestContentType": [
            "application/json",
          ],
          "requestDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [
              NumberSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "int64",
                "id": "",
                "keyName": "id",
                "label": "",
                "params": [],
                "rawType": "integer",
                "rules": {
                  "exclusiveMaximum": undefined,
                  "exclusiveMinimum": undefined,
                  "maximum": undefined,
                  "minimum": undefined,
                  "multipleOf": undefined,
                  "required": false,
                },
                "title": "",
                "type": "number",
              },
              NumberSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "int64",
                "id": "",
                "keyName": "petId",
                "label": "",
                "params": [],
                "rawType": "integer",
                "rules": {
                  "exclusiveMaximum": undefined,
                  "exclusiveMinimum": undefined,
                  "maximum": undefined,
                  "minimum": undefined,
                  "multipleOf": undefined,
                  "required": false,
                },
                "title": "",
                "type": "number",
              },
              NumberSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "int32",
                "id": "",
                "keyName": "quantity",
                "label": "",
                "params": [],
                "rawType": "integer",
                "rules": {
                  "exclusiveMaximum": undefined,
                  "exclusiveMinimum": undefined,
                  "maximum": undefined,
                  "minimum": undefined,
                  "multipleOf": undefined,
                  "required": false,
                },
                "title": "",
                "type": "number",
              },
              StringSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "date-time",
                "id": "",
                "keyName": "shipDate",
                "label": "",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": false,
                },
                "title": "",
                "type": "string",
              },
              StringSchema {
                "description": "Order Status",
                "enum": [
                  "placed",
                  "approved",
                  "delivered",
                ],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "status",
                "label": "Order Status",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": false,
                },
                "title": "",
                "type": "string",
              },
              BooleanSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "complete",
                "label": "",
                "params": [],
                "rawType": "boolean",
                "rules": {
                  "required": false,
                },
                "title": "",
                "type": "boolean",
              },
            ],
            "rawType": "object",
            "rules": {
              "required": false,
            },
            "title": "",
            "type": "object",
          },
          "requestExtraDataSchema": null,
          "responseContentType": [],
          "responseDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [
              NumberSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "int64",
                "id": "",
                "keyName": "id",
                "label": "",
                "params": [],
                "rawType": "integer",
                "rules": {
                  "exclusiveMaximum": undefined,
                  "exclusiveMinimum": undefined,
                  "maximum": undefined,
                  "minimum": undefined,
                  "multipleOf": undefined,
                  "required": true,
                },
                "title": "",
                "type": "number",
              },
              NumberSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "int64",
                "id": "",
                "keyName": "petId",
                "label": "",
                "params": [],
                "rawType": "integer",
                "rules": {
                  "exclusiveMaximum": undefined,
                  "exclusiveMinimum": undefined,
                  "maximum": undefined,
                  "minimum": undefined,
                  "multipleOf": undefined,
                  "required": true,
                },
                "title": "",
                "type": "number",
              },
              NumberSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "int32",
                "id": "",
                "keyName": "quantity",
                "label": "",
                "params": [],
                "rawType": "integer",
                "rules": {
                  "exclusiveMaximum": undefined,
                  "exclusiveMinimum": undefined,
                  "maximum": undefined,
                  "minimum": undefined,
                  "multipleOf": undefined,
                  "required": true,
                },
                "title": "",
                "type": "number",
              },
              StringSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "date-time",
                "id": "",
                "keyName": "shipDate",
                "label": "",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": true,
                },
                "title": "",
                "type": "string",
              },
              StringSchema {
                "description": "Order Status",
                "enum": [
                  "placed",
                  "approved",
                  "delivered",
                ],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "status",
                "label": "Order Status",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": true,
                },
                "title": "",
                "type": "string",
              },
              BooleanSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "complete",
                "label": "",
                "params": [],
                "rawType": "boolean",
                "rules": {
                  "required": true,
                },
                "title": "",
                "type": "boolean",
              },
            ],
            "rawType": "object",
            "rules": {
              "required": true,
            },
            "title": "",
            "type": "object",
          },
          "title": "Place an order for a pet",
        },
        {
          "cookies": null,
          "description": "For valid response try integer IDs with value <= 5 or > 10. Other values will generate exceptions.",
          "docURL": "",
          "formDataKeyNameList": [],
          "headers": null,
          "id": "",
          "label": "Find purchase order by ID",
          "method": "get",
          "path": "/api/v3/store/order/{orderId}",
          "pathParamKeyNameList": [
            "orderId",
          ],
          "queryStringKeyNameList": [],
          "requestContentType": [
            "application/json",
          ],
          "requestDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [
              NumberSchema {
                "description": "ID of order that needs to be fetched",
                "enum": [],
                "examples": [],
                "format": "int64",
                "id": "",
                "keyName": "orderId",
                "label": "ID of order that needs to be fetched",
                "params": [],
                "rawType": "integer",
                "rules": {
                  "exclusiveMaximum": undefined,
                  "exclusiveMinimum": undefined,
                  "maximum": undefined,
                  "minimum": undefined,
                  "multipleOf": undefined,
                  "required": true,
                },
                "title": "",
                "type": "number",
              },
            ],
            "rawType": "object",
            "rules": {
              "required": false,
            },
            "title": "",
            "type": "object",
          },
          "requestExtraDataSchema": null,
          "responseContentType": [],
          "responseDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [
              NumberSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "int64",
                "id": "",
                "keyName": "id",
                "label": "",
                "params": [],
                "rawType": "integer",
                "rules": {
                  "exclusiveMaximum": undefined,
                  "exclusiveMinimum": undefined,
                  "maximum": undefined,
                  "minimum": undefined,
                  "multipleOf": undefined,
                  "required": true,
                },
                "title": "",
                "type": "number",
              },
              NumberSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "int64",
                "id": "",
                "keyName": "petId",
                "label": "",
                "params": [],
                "rawType": "integer",
                "rules": {
                  "exclusiveMaximum": undefined,
                  "exclusiveMinimum": undefined,
                  "maximum": undefined,
                  "minimum": undefined,
                  "multipleOf": undefined,
                  "required": true,
                },
                "title": "",
                "type": "number",
              },
              NumberSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "int32",
                "id": "",
                "keyName": "quantity",
                "label": "",
                "params": [],
                "rawType": "integer",
                "rules": {
                  "exclusiveMaximum": undefined,
                  "exclusiveMinimum": undefined,
                  "maximum": undefined,
                  "minimum": undefined,
                  "multipleOf": undefined,
                  "required": true,
                },
                "title": "",
                "type": "number",
              },
              StringSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "date-time",
                "id": "",
                "keyName": "shipDate",
                "label": "",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": true,
                },
                "title": "",
                "type": "string",
              },
              StringSchema {
                "description": "Order Status",
                "enum": [
                  "placed",
                  "approved",
                  "delivered",
                ],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "status",
                "label": "Order Status",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": true,
                },
                "title": "",
                "type": "string",
              },
              BooleanSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "complete",
                "label": "",
                "params": [],
                "rawType": "boolean",
                "rules": {
                  "required": true,
                },
                "title": "",
                "type": "boolean",
              },
            ],
            "rawType": "object",
            "rules": {
              "required": true,
            },
            "title": "",
            "type": "object",
          },
          "title": "Find purchase order by ID",
        },
        {
          "cookies": null,
          "description": "For valid response try integer IDs with value < 1000. Anything above 1000 or nonintegers will generate API errors",
          "docURL": "",
          "formDataKeyNameList": [],
          "headers": null,
          "id": "",
          "label": "Delete purchase order by ID",
          "method": "delete",
          "path": "/api/v3/store/order/{orderId}",
          "pathParamKeyNameList": [
            "orderId",
          ],
          "queryStringKeyNameList": [],
          "requestContentType": [],
          "requestDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [
              NumberSchema {
                "description": "ID of the order that needs to be deleted",
                "enum": [],
                "examples": [],
                "format": "int64",
                "id": "",
                "keyName": "orderId",
                "label": "ID of the order that needs to be deleted",
                "params": [],
                "rawType": "integer",
                "rules": {
                  "exclusiveMaximum": undefined,
                  "exclusiveMinimum": undefined,
                  "maximum": undefined,
                  "minimum": undefined,
                  "multipleOf": undefined,
                  "required": true,
                },
                "title": "",
                "type": "number",
              },
            ],
            "rawType": "object",
            "rules": {
              "required": false,
            },
            "title": "",
            "type": "object",
          },
          "requestExtraDataSchema": null,
          "responseContentType": [],
          "responseDataSchema": null,
          "title": "Delete purchase order by ID",
        },
      ],
      "description": "Access to Petstore orders",
      "id": "",
      "name": "store",
    },
    {
      "apiList": [
        {
          "cookies": null,
          "description": "This can only be done by the logged in user.",
          "docURL": "",
          "formDataKeyNameList": [],
          "headers": null,
          "id": "",
          "label": "Create user",
          "method": "post",
          "path": "/api/v3/user",
          "pathParamKeyNameList": [],
          "queryStringKeyNameList": [],
          "requestContentType": [
            "application/json",
          ],
          "requestDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [
              NumberSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "int64",
                "id": "",
                "keyName": "id",
                "label": "",
                "params": [],
                "rawType": "integer",
                "rules": {
                  "exclusiveMaximum": undefined,
                  "exclusiveMinimum": undefined,
                  "maximum": undefined,
                  "minimum": undefined,
                  "multipleOf": undefined,
                  "required": false,
                },
                "title": "",
                "type": "number",
              },
              StringSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "username",
                "label": "",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": false,
                },
                "title": "",
                "type": "string",
              },
              StringSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "firstName",
                "label": "",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": false,
                },
                "title": "",
                "type": "string",
              },
              StringSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "lastName",
                "label": "",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": false,
                },
                "title": "",
                "type": "string",
              },
              StringSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "email",
                "label": "",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": false,
                },
                "title": "",
                "type": "string",
              },
              StringSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "password",
                "label": "",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": false,
                },
                "title": "",
                "type": "string",
              },
              StringSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "phone",
                "label": "",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": false,
                },
                "title": "",
                "type": "string",
              },
              NumberSchema {
                "description": "User Status",
                "enum": [],
                "examples": [],
                "format": "int32",
                "id": "",
                "keyName": "userStatus",
                "label": "User Status",
                "params": [],
                "rawType": "integer",
                "rules": {
                  "exclusiveMaximum": undefined,
                  "exclusiveMinimum": undefined,
                  "maximum": undefined,
                  "minimum": undefined,
                  "multipleOf": undefined,
                  "required": false,
                },
                "title": "",
                "type": "number",
              },
            ],
            "rawType": "object",
            "rules": {
              "required": false,
            },
            "title": "",
            "type": "object",
          },
          "requestExtraDataSchema": null,
          "responseContentType": [],
          "responseDataSchema": null,
          "title": "Create user",
        },
        {
          "cookies": null,
          "description": "Creates list of users with given input array",
          "docURL": "",
          "formDataKeyNameList": [],
          "headers": null,
          "id": "",
          "label": "Creates list of users with given input array",
          "method": "post",
          "path": "/api/v3/user/createWithList",
          "pathParamKeyNameList": [],
          "queryStringKeyNameList": [],
          "requestContentType": [
            "application/json",
          ],
          "requestDataSchema": ArraySchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [
              ObjectSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "",
                "label": "",
                "params": [
                  NumberSchema {
                    "description": "",
                    "enum": [],
                    "examples": [],
                    "format": "int64",
                    "id": "",
                    "keyName": "id",
                    "label": "",
                    "params": [],
                    "rawType": "integer",
                    "rules": {
                      "exclusiveMaximum": undefined,
                      "exclusiveMinimum": undefined,
                      "maximum": undefined,
                      "minimum": undefined,
                      "multipleOf": undefined,
                      "required": false,
                    },
                    "title": "",
                    "type": "number",
                  },
                  StringSchema {
                    "description": "",
                    "enum": [],
                    "examples": [],
                    "format": "",
                    "id": "",
                    "keyName": "username",
                    "label": "",
                    "params": [],
                    "rawType": "string",
                    "rules": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                      "required": false,
                    },
                    "title": "",
                    "type": "string",
                  },
                  StringSchema {
                    "description": "",
                    "enum": [],
                    "examples": [],
                    "format": "",
                    "id": "",
                    "keyName": "firstName",
                    "label": "",
                    "params": [],
                    "rawType": "string",
                    "rules": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                      "required": false,
                    },
                    "title": "",
                    "type": "string",
                  },
                  StringSchema {
                    "description": "",
                    "enum": [],
                    "examples": [],
                    "format": "",
                    "id": "",
                    "keyName": "lastName",
                    "label": "",
                    "params": [],
                    "rawType": "string",
                    "rules": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                      "required": false,
                    },
                    "title": "",
                    "type": "string",
                  },
                  StringSchema {
                    "description": "",
                    "enum": [],
                    "examples": [],
                    "format": "",
                    "id": "",
                    "keyName": "email",
                    "label": "",
                    "params": [],
                    "rawType": "string",
                    "rules": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                      "required": false,
                    },
                    "title": "",
                    "type": "string",
                  },
                  StringSchema {
                    "description": "",
                    "enum": [],
                    "examples": [],
                    "format": "",
                    "id": "",
                    "keyName": "password",
                    "label": "",
                    "params": [],
                    "rawType": "string",
                    "rules": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                      "required": false,
                    },
                    "title": "",
                    "type": "string",
                  },
                  StringSchema {
                    "description": "",
                    "enum": [],
                    "examples": [],
                    "format": "",
                    "id": "",
                    "keyName": "phone",
                    "label": "",
                    "params": [],
                    "rawType": "string",
                    "rules": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                      "required": false,
                    },
                    "title": "",
                    "type": "string",
                  },
                  NumberSchema {
                    "description": "User Status",
                    "enum": [],
                    "examples": [],
                    "format": "int32",
                    "id": "",
                    "keyName": "userStatus",
                    "label": "User Status",
                    "params": [],
                    "rawType": "integer",
                    "rules": {
                      "exclusiveMaximum": undefined,
                      "exclusiveMinimum": undefined,
                      "maximum": undefined,
                      "minimum": undefined,
                      "multipleOf": undefined,
                      "required": false,
                    },
                    "title": "",
                    "type": "number",
                  },
                ],
                "rawType": "object",
                "rules": {
                  "required": false,
                },
                "title": "",
                "type": "object",
              },
            ],
            "rawType": "array",
            "rules": {
              "maxLength": undefined,
              "minLength": undefined,
              "required": false,
              "uniqueItems": undefined,
            },
            "title": "",
            "type": "array",
          },
          "requestExtraDataSchema": null,
          "responseContentType": [],
          "responseDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [
              NumberSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "int64",
                "id": "",
                "keyName": "id",
                "label": "",
                "params": [],
                "rawType": "integer",
                "rules": {
                  "exclusiveMaximum": undefined,
                  "exclusiveMinimum": undefined,
                  "maximum": undefined,
                  "minimum": undefined,
                  "multipleOf": undefined,
                  "required": true,
                },
                "title": "",
                "type": "number",
              },
              StringSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "username",
                "label": "",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": true,
                },
                "title": "",
                "type": "string",
              },
              StringSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "firstName",
                "label": "",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": true,
                },
                "title": "",
                "type": "string",
              },
              StringSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "lastName",
                "label": "",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": true,
                },
                "title": "",
                "type": "string",
              },
              StringSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "email",
                "label": "",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": true,
                },
                "title": "",
                "type": "string",
              },
              StringSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "password",
                "label": "",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": true,
                },
                "title": "",
                "type": "string",
              },
              StringSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "phone",
                "label": "",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": true,
                },
                "title": "",
                "type": "string",
              },
              NumberSchema {
                "description": "User Status",
                "enum": [],
                "examples": [],
                "format": "int32",
                "id": "",
                "keyName": "userStatus",
                "label": "User Status",
                "params": [],
                "rawType": "integer",
                "rules": {
                  "exclusiveMaximum": undefined,
                  "exclusiveMinimum": undefined,
                  "maximum": undefined,
                  "minimum": undefined,
                  "multipleOf": undefined,
                  "required": true,
                },
                "title": "",
                "type": "number",
              },
            ],
            "rawType": "object",
            "rules": {
              "required": true,
            },
            "title": "",
            "type": "object",
          },
          "title": "Creates list of users with given input array",
        },
        {
          "cookies": null,
          "description": "",
          "docURL": "",
          "formDataKeyNameList": [],
          "headers": null,
          "id": "",
          "label": "Logs user into the system",
          "method": "get",
          "path": "/api/v3/user/login",
          "pathParamKeyNameList": [],
          "queryStringKeyNameList": [
            "username",
            "password",
          ],
          "requestContentType": [
            "application/json",
          ],
          "requestDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [
              StringSchema {
                "description": "The user name for login",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "username",
                "label": "The user name for login",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": false,
                },
                "title": "",
                "type": "string",
              },
              StringSchema {
                "description": "The password for login in clear text",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "password",
                "label": "The password for login in clear text",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": false,
                },
                "title": "",
                "type": "string",
              },
            ],
            "rawType": "object",
            "rules": {
              "required": false,
            },
            "title": "",
            "type": "object",
          },
          "requestExtraDataSchema": null,
          "responseContentType": [],
          "responseDataSchema": StringSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [],
            "rawType": "string",
            "rules": {
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
              "required": true,
            },
            "title": "",
            "type": "string",
          },
          "title": "Logs user into the system",
        },
        {
          "cookies": null,
          "description": "",
          "docURL": "",
          "formDataKeyNameList": [],
          "headers": null,
          "id": "",
          "label": "Logs out current logged in user session",
          "method": "get",
          "path": "/api/v3/user/logout",
          "pathParamKeyNameList": [],
          "queryStringKeyNameList": [],
          "requestContentType": [],
          "requestDataSchema": null,
          "requestExtraDataSchema": null,
          "responseContentType": [],
          "responseDataSchema": null,
          "title": "Logs out current logged in user session",
        },
        {
          "cookies": null,
          "description": "",
          "docURL": "",
          "formDataKeyNameList": [],
          "headers": null,
          "id": "",
          "label": "Get user by user name",
          "method": "get",
          "path": "/api/v3/user/{username}",
          "pathParamKeyNameList": [
            "username1",
          ],
          "queryStringKeyNameList": [],
          "requestContentType": [
            "application/json",
          ],
          "requestDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [
              StringSchema {
                "description": "The name that needs to be fetched. Use user1 for testing. ",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "username1",
                "label": "The name that needs to be fetched. Use user1 for testing. ",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": true,
                },
                "title": "",
                "type": "string",
              },
            ],
            "rawType": "object",
            "rules": {
              "required": false,
            },
            "title": "",
            "type": "object",
          },
          "requestExtraDataSchema": null,
          "responseContentType": [],
          "responseDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [
              NumberSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "int64",
                "id": "",
                "keyName": "id",
                "label": "",
                "params": [],
                "rawType": "integer",
                "rules": {
                  "exclusiveMaximum": undefined,
                  "exclusiveMinimum": undefined,
                  "maximum": undefined,
                  "minimum": undefined,
                  "multipleOf": undefined,
                  "required": true,
                },
                "title": "",
                "type": "number",
              },
              StringSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "username",
                "label": "",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": true,
                },
                "title": "",
                "type": "string",
              },
              StringSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "firstName",
                "label": "",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": true,
                },
                "title": "",
                "type": "string",
              },
              StringSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "lastName",
                "label": "",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": true,
                },
                "title": "",
                "type": "string",
              },
              StringSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "email",
                "label": "",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": true,
                },
                "title": "",
                "type": "string",
              },
              StringSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "password",
                "label": "",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": true,
                },
                "title": "",
                "type": "string",
              },
              StringSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "phone",
                "label": "",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": true,
                },
                "title": "",
                "type": "string",
              },
              NumberSchema {
                "description": "User Status",
                "enum": [],
                "examples": [],
                "format": "int32",
                "id": "",
                "keyName": "userStatus",
                "label": "User Status",
                "params": [],
                "rawType": "integer",
                "rules": {
                  "exclusiveMaximum": undefined,
                  "exclusiveMinimum": undefined,
                  "maximum": undefined,
                  "minimum": undefined,
                  "multipleOf": undefined,
                  "required": true,
                },
                "title": "",
                "type": "number",
              },
            ],
            "rawType": "object",
            "rules": {
              "required": true,
            },
            "title": "",
            "type": "object",
          },
          "title": "Get user by user name",
        },
        {
          "cookies": null,
          "description": "This can only be done by the logged in user.",
          "docURL": "",
          "formDataKeyNameList": [],
          "headers": null,
          "id": "",
          "label": "Update user",
          "method": "put",
          "path": "/api/v3/user/{username}",
          "pathParamKeyNameList": [
            "username1",
          ],
          "queryStringKeyNameList": [],
          "requestContentType": [
            "application/json",
          ],
          "requestDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [
              StringSchema {
                "description": "name that need to be deleted",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "username1",
                "label": "name that need to be deleted",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": true,
                },
                "title": "",
                "type": "string",
              },
              NumberSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "int64",
                "id": "",
                "keyName": "id",
                "label": "",
                "params": [],
                "rawType": "integer",
                "rules": {
                  "exclusiveMaximum": undefined,
                  "exclusiveMinimum": undefined,
                  "maximum": undefined,
                  "minimum": undefined,
                  "multipleOf": undefined,
                  "required": false,
                },
                "title": "",
                "type": "number",
              },
              StringSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "username",
                "label": "",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": false,
                },
                "title": "",
                "type": "string",
              },
              StringSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "firstName",
                "label": "",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": false,
                },
                "title": "",
                "type": "string",
              },
              StringSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "lastName",
                "label": "",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": false,
                },
                "title": "",
                "type": "string",
              },
              StringSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "email",
                "label": "",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": false,
                },
                "title": "",
                "type": "string",
              },
              StringSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "password",
                "label": "",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": false,
                },
                "title": "",
                "type": "string",
              },
              StringSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "phone",
                "label": "",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": false,
                },
                "title": "",
                "type": "string",
              },
              NumberSchema {
                "description": "User Status",
                "enum": [],
                "examples": [],
                "format": "int32",
                "id": "",
                "keyName": "userStatus",
                "label": "User Status",
                "params": [],
                "rawType": "integer",
                "rules": {
                  "exclusiveMaximum": undefined,
                  "exclusiveMinimum": undefined,
                  "maximum": undefined,
                  "minimum": undefined,
                  "multipleOf": undefined,
                  "required": false,
                },
                "title": "",
                "type": "number",
              },
            ],
            "rawType": "object",
            "rules": {
              "required": false,
            },
            "title": "",
            "type": "object",
          },
          "requestExtraDataSchema": null,
          "responseContentType": [],
          "responseDataSchema": null,
          "title": "Update user",
        },
        {
          "cookies": null,
          "description": "This can only be done by the logged in user.",
          "docURL": "",
          "formDataKeyNameList": [],
          "headers": null,
          "id": "",
          "label": "Delete user",
          "method": "delete",
          "path": "/api/v3/user/{username}",
          "pathParamKeyNameList": [
            "username",
          ],
          "queryStringKeyNameList": [],
          "requestContentType": [],
          "requestDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [
              StringSchema {
                "description": "The name that needs to be deleted",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "username",
                "label": "The name that needs to be deleted",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": true,
                },
                "title": "",
                "type": "string",
              },
            ],
            "rawType": "object",
            "rules": {
              "required": false,
            },
            "title": "",
            "type": "object",
          },
          "requestExtraDataSchema": null,
          "responseContentType": [],
          "responseDataSchema": null,
          "title": "Delete user",
        },
      ],
      "description": "Operations about user",
      "id": "",
      "name": "user",
    },
    {
      "apiList": [
        {
          "cookies": null,
          "description": "/api/tbt",
          "docURL": "",
          "formDataKeyNameList": [],
          "headers": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [
              StringSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "Authorization",
                "label": "",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": false,
                },
                "title": "",
                "type": "string",
              },
            ],
            "rawType": "object",
            "rules": {
              "required": false,
            },
            "title": "",
            "type": "object",
          },
          "id": "",
          "label": "查看排班列表",
          "method": "get",
          "path": "/api/v3/api/tbf/arranging/work",
          "pathParamKeyNameList": [],
          "queryStringKeyNameList": [
            "groupId",
            "realName",
            "month",
            "userIds",
          ],
          "requestContentType": [
            "application/json",
          ],
          "requestDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [
              StringSchema {
                "description": "考勤组id",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "groupId",
                "label": "考勤组id",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": true,
                },
                "title": "",
                "type": "string",
              },
              StringSchema {
                "description": "成员名称",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "realName",
                "label": "成员名称",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": false,
                },
                "title": "",
                "type": "string",
              },
              StringSchema {
                "description": "月份",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "month",
                "label": "月份",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": true,
                },
                "title": "",
                "type": "string",
              },
              ArraySchema {
                "description": "用户id集合",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "userIds",
                "label": "用户id集合",
                "params": [
                  StringSchema {
                    "description": "",
                    "enum": [],
                    "examples": [],
                    "format": "",
                    "id": "",
                    "keyName": "",
                    "label": "",
                    "params": [],
                    "rawType": "string",
                    "rules": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                      "required": false,
                    },
                    "title": "",
                    "type": "string",
                  },
                ],
                "rawType": "array",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "required": false,
                  "uniqueItems": undefined,
                },
                "title": "",
                "type": "array",
              },
            ],
            "rawType": "object",
            "rules": {
              "required": false,
            },
            "title": "",
            "type": "object",
          },
          "requestExtraDataSchema": null,
          "responseContentType": [],
          "responseDataSchema": ArraySchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [
              ObjectSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "",
                "label": "",
                "params": [
                  ObjectSchema {
                    "description": "",
                    "enum": [],
                    "examples": [],
                    "format": "",
                    "id": "",
                    "keyName": "schedulesVO",
                    "label": "排班实体",
                    "params": [
                      StringSchema {
                        "description": "",
                        "enum": [],
                        "examples": [],
                        "format": "",
                        "id": "",
                        "keyName": "userId",
                        "label": "用户id",
                        "params": [],
                        "rawType": "string",
                        "rules": {
                          "maxLength": undefined,
                          "minLength": undefined,
                          "pattern": undefined,
                          "required": true,
                        },
                        "title": "用户id",
                        "type": "string",
                      },
                      StringSchema {
                        "description": "",
                        "enum": [],
                        "examples": [],
                        "format": "",
                        "id": "",
                        "keyName": "realName",
                        "label": "名称",
                        "params": [],
                        "rawType": "string",
                        "rules": {
                          "maxLength": undefined,
                          "minLength": undefined,
                          "pattern": undefined,
                          "required": true,
                        },
                        "title": "名称",
                        "type": "string",
                      },
                      StringSchema {
                        "description": "",
                        "enum": [],
                        "examples": [],
                        "format": "",
                        "id": "",
                        "keyName": "delMark",
                        "label": "是否移除(1移除)",
                        "params": [],
                        "rawType": "string",
                        "rules": {
                          "maxLength": undefined,
                          "minLength": undefined,
                          "pattern": undefined,
                          "required": true,
                        },
                        "title": "是否移除(1移除)",
                        "type": "string",
                      },
                      StringSchema {
                        "description": "(0未产生借调 1: 被借调, 2: 借调)",
                        "enum": [],
                        "examples": [],
                        "format": "",
                        "id": "",
                        "keyName": "selfGroup",
                        "label": "是否自己的考勤组",
                        "params": [],
                        "rawType": "string",
                        "rules": {
                          "maxLength": undefined,
                          "minLength": undefined,
                          "pattern": undefined,
                          "required": true,
                        },
                        "title": "是否自己的考勤组",
                        "type": "string",
                      },
                      ObjectSchema {
                        "description": "",
                        "enum": [],
                        "examples": [],
                        "format": "",
                        "id": "",
                        "keyName": "val",
                        "label": "",
                        "params": [
                          ArraySchema {
                            "description": "",
                            "enum": [],
                            "examples": [],
                            "format": "",
                            "id": "",
                            "keyName": "2023-11-10",
                            "label": "",
                            "params": [
                              ObjectSchema {
                                "description": "",
                                "enum": [],
                                "examples": [],
                                "format": "",
                                "id": "",
                                "keyName": "",
                                "label": "",
                                "params": [
                                  NumberSchema {
                                    "description": "0无出勤1休息日2正常出勤 3假期(抵扣券) 4假期(兑换券) 5未来的时间不在本组 6迟到 7早退 8缺卡 9缺勤 10外勤 11请假 12加班 13借调 14被借调 15当日有早退且借调情况 16当日有迟到且借调情况 17当日有缺卡且借调情况 18当日有缺勤且借调情况 19当日有打外勤且借调情况,20假 21上班打卡",
                                    "enum": [],
                                    "examples": [],
                                    "format": "",
                                    "id": "",
                                    "keyName": "type",
                                    "label": "类型",
                                    "params": [],
                                    "rawType": "integer",
                                    "rules": {
                                      "exclusiveMaximum": undefined,
                                      "exclusiveMinimum": undefined,
                                      "maximum": undefined,
                                      "minimum": undefined,
                                      "multipleOf": undefined,
                                      "required": true,
                                    },
                                    "title": "类型",
                                    "type": "number",
                                  },
                                  StringSchema {
                                    "description": "",
                                    "enum": [],
                                    "examples": [],
                                    "format": "",
                                    "id": "",
                                    "keyName": "periodId",
                                    "label": "时段id",
                                    "params": [],
                                    "rawType": "string",
                                    "rules": {
                                      "maxLength": undefined,
                                      "minLength": undefined,
                                      "pattern": undefined,
                                      "required": true,
                                    },
                                    "title": "时段id",
                                    "type": "string",
                                  },
                                  StringSchema {
                                    "description": "",
                                    "enum": [],
                                    "examples": [],
                                    "format": "",
                                    "id": "",
                                    "keyName": "start",
                                    "label": "开始时间点",
                                    "params": [],
                                    "rawType": "string",
                                    "rules": {
                                      "maxLength": undefined,
                                      "minLength": undefined,
                                      "pattern": undefined,
                                      "required": true,
                                    },
                                    "title": "开始时间点",
                                    "type": "string",
                                  },
                                  StringSchema {
                                    "description": "",
                                    "enum": [],
                                    "examples": [],
                                    "format": "",
                                    "id": "",
                                    "keyName": "end",
                                    "label": "结束时间点",
                                    "params": [],
                                    "rawType": "string",
                                    "rules": {
                                      "maxLength": undefined,
                                      "minLength": undefined,
                                      "pattern": undefined,
                                      "required": true,
                                    },
                                    "title": "结束时间点",
                                    "type": "string",
                                  },
                                  StringSchema {
                                    "description": "",
                                    "enum": [],
                                    "examples": [],
                                    "format": "",
                                    "id": "",
                                    "keyName": "isEndTomorrow",
                                    "label": "下班时间是否为次日(1今日 2次日)",
                                    "params": [],
                                    "rawType": "string",
                                    "rules": {
                                      "maxLength": undefined,
                                      "minLength": undefined,
                                      "pattern": undefined,
                                      "required": true,
                                    },
                                    "title": "下班时间是否为次日(1今日 2次日)",
                                    "type": "string",
                                  },
                                  StringSchema {
                                    "description": "(0未产生借调 1: 被借调, 2: 借调)",
                                    "enum": [],
                                    "examples": [],
                                    "format": "",
                                    "id": "",
                                    "keyName": "selfGroup",
                                    "label": "是否自己的考勤组",
                                    "params": [],
                                    "rawType": "string",
                                    "rules": {
                                      "maxLength": undefined,
                                      "minLength": undefined,
                                      "pattern": undefined,
                                      "required": true,
                                    },
                                    "title": "是否自己的考勤组",
                                    "type": "string",
                                  },
                                  NumberSchema {
                                    "description": "用于颜色展示",
                                    "enum": [],
                                    "examples": [],
                                    "format": "",
                                    "id": "",
                                    "keyName": "sort",
                                    "label": "排序",
                                    "params": [],
                                    "rawType": "integer",
                                    "rules": {
                                      "exclusiveMaximum": undefined,
                                      "exclusiveMinimum": undefined,
                                      "maximum": undefined,
                                      "minimum": undefined,
                                      "multipleOf": undefined,
                                      "required": true,
                                    },
                                    "title": "排序",
                                    "type": "number",
                                  },
                                ],
                                "rawType": "object",
                                "rules": {
                                  "required": true,
                                },
                                "title": "",
                                "type": "object",
                              },
                            ],
                            "rawType": "array",
                            "rules": {
                              "maxLength": undefined,
                              "minLength": undefined,
                              "required": true,
                              "uniqueItems": undefined,
                            },
                            "title": "",
                            "type": "array",
                          },
                        ],
                        "rawType": "object",
                        "rules": {
                          "required": true,
                        },
                        "title": "",
                        "type": "object",
                      },
                    ],
                    "rawType": "object",
                    "rules": {
                      "required": true,
                    },
                    "title": "排班实体",
                    "type": "object",
                  },
                ],
                "rawType": "object",
                "rules": {
                  "required": true,
                },
                "title": "",
                "type": "object",
              },
            ],
            "rawType": "array",
            "rules": {
              "maxLength": undefined,
              "minLength": undefined,
              "required": true,
              "uniqueItems": undefined,
            },
            "title": "",
            "type": "array",
          },
          "title": "查看排班列表",
        },
      ],
      "description": "未设置分组的接口集合",
      "id": "",
      "name": "未知分组",
    },
  ],
  "description": "This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more aboutSwagger at [http://swagger.io](http://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!You can now help us improve the API whether it's by making changes to the definition itself or to the code.That way, with time, we can improve the API in general, and expose some of the new features in OAS3.Some useful links:- [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)- [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)",
  "documentServerUrl": "",
  "documentVersion": "3.0.2",
  "id": "",
  "title": "Swagger Petstore - OpenAPI 3.0",
  "version": "1.0.17",
}
`;

exports[`swagger-parser v3 query-param.json: query-param.json 1`] = `
{
  "basePath": "",
  "categoryList": [
    {
      "apiList": [
        {
          "cookies": null,
          "description": "",
          "docURL": "",
          "formDataKeyNameList": [],
          "headers": null,
          "id": "",
          "label": "请求参数 查询字符串",
          "method": "get",
          "path": "/query-params",
          "pathParamKeyNameList": [],
          "queryStringKeyNameList": [
            "username",
            "phone",
          ],
          "requestContentType": [
            "application/json",
          ],
          "requestDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [
              StringSchema {
                "description": "用户名",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "username",
                "label": "用户名",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": false,
                },
                "title": "",
                "type": "string",
              },
              StringSchema {
                "description": "联系电话",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "phone",
                "label": "联系电话",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": false,
                },
                "title": "",
                "type": "string",
              },
            ],
            "rawType": "object",
            "rules": {
              "required": false,
            },
            "title": "",
            "type": "object",
          },
          "requestExtraDataSchema": null,
          "responseContentType": [],
          "responseDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [],
            "rawType": "object",
            "rules": {
              "required": true,
            },
            "title": "",
            "type": "object",
          },
          "title": "请求参数 查询字符串",
        },
      ],
      "description": "未设置分组的接口集合",
      "id": "",
      "name": "未知分组",
    },
  ],
  "description": "",
  "documentServerUrl": "",
  "documentVersion": "3.0.1",
  "id": "",
  "title": "API HELPER 示例项目",
  "version": "1.0.0",
}
`;

exports[`swagger-parser v3 resp-array.json: resp-array.json 1`] = `
{
  "basePath": "",
  "categoryList": [
    {
      "apiList": [
        {
          "cookies": null,
          "description": "",
          "docURL": "",
          "formDataKeyNameList": [],
          "headers": null,
          "id": "",
          "label": "响应数据 array",
          "method": "post",
          "path": "/resp-array",
          "pathParamKeyNameList": [],
          "queryStringKeyNameList": [],
          "requestContentType": [
            "application/json",
          ],
          "requestDataSchema": null,
          "requestExtraDataSchema": null,
          "responseContentType": [],
          "responseDataSchema": ArraySchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [
              ObjectSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "",
                "label": "",
                "params": [
                  StringSchema {
                    "description": "",
                    "enum": [],
                    "examples": [],
                    "format": "",
                    "id": "",
                    "keyName": "username",
                    "label": "用户名",
                    "params": [],
                    "rawType": "string",
                    "rules": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                      "required": true,
                    },
                    "title": "用户名",
                    "type": "string",
                  },
                ],
                "rawType": "object",
                "rules": {
                  "required": true,
                },
                "title": "",
                "type": "object",
              },
            ],
            "rawType": "array",
            "rules": {
              "maxLength": undefined,
              "minLength": undefined,
              "required": true,
              "uniqueItems": undefined,
            },
            "title": "",
            "type": "array",
          },
          "title": "响应数据 array",
        },
      ],
      "description": "未设置分组的接口集合",
      "id": "",
      "name": "未知分组",
    },
  ],
  "description": "",
  "documentServerUrl": "",
  "documentVersion": "3.0.1",
  "id": "",
  "title": "API HELPER 示例项目",
  "version": "1.0.0",
}
`;

exports[`swagger-parser v3 same-sibling-node.json: same-sibling-node.json 1`] = `
{
  "basePath": "",
  "categoryList": [
    {
      "apiList": [
        {
          "cookies": null,
          "description": "",
          "docURL": "",
          "formDataKeyNameList": [],
          "headers": null,
          "id": "",
          "label": "麦谷主动安全统计 (Auth)",
          "method": "post",
          "path": "/api/tboxDevice/SafetyListmgTJ",
          "pathParamKeyNameList": [],
          "queryStringKeyNameList": [],
          "requestContentType": [
            "application/json",
          ],
          "requestDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [
              StringSchema {
                "description": "主动安全事件类型ID,具体见主动安全事件类型说明",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "event_type",
                "label": "主动安全事件类型ID,具体见主动安全事件类型说明",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": false,
                },
                "title": "",
                "type": "string",
              },
              NumberSchema {
                "description": "前端不用传",
                "enum": [],
                "examples": [],
                "format": "int32",
                "id": "",
                "keyName": "belonging",
                "label": "前端不用传",
                "params": [],
                "rawType": "integer",
                "rules": {
                  "exclusiveMaximum": undefined,
                  "exclusiveMinimum": undefined,
                  "maximum": undefined,
                  "minimum": undefined,
                  "multipleOf": undefined,
                  "required": false,
                },
                "title": "",
                "type": "number",
              },
              StringSchema {
                "description": "前端不用传",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "dataAuthority",
                "label": "前端不用传",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": false,
                },
                "title": "",
                "type": "string",
              },
            ],
            "rawType": "object",
            "rules": {
              "required": false,
            },
            "title": "",
            "type": "object",
          },
          "requestExtraDataSchema": null,
          "responseContentType": [],
          "responseDataSchema": ObjectSchema {
            "description": "接口返回对象",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "接口返回对象",
            "params": [
              NumberSchema {
                "description": "状态返回编码",
                "enum": [
                  200,
                  202,
                  205,
                  210,
                  401,
                  402,
                  403,
                  404,
                  500,
                  1000,
                ],
                "examples": [],
                "format": "int32",
                "id": "",
                "keyName": "status",
                "label": "状态返回编码",
                "params": [],
                "rawType": "integer",
                "rules": {
                  "exclusiveMaximum": undefined,
                  "exclusiveMinimum": undefined,
                  "maximum": undefined,
                  "minimum": undefined,
                  "multipleOf": undefined,
                  "required": true,
                },
                "title": "",
                "type": "number",
              },
              StringSchema {
                "description": "返回信息",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "message",
                "label": "返回信息",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": true,
                },
                "title": "",
                "type": "string",
              },
              StringSchema {
                "description": "返回时间戳",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "timestamp",
                "label": "返回时间戳",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": true,
                },
                "title": "",
                "type": "string",
              },
              ObjectSchema {
                "description": "日期统计",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "data",
                "label": "日期统计",
                "params": [
                  ObjectSchema {
                    "description": "",
                    "enum": [],
                    "examples": [],
                    "format": "",
                    "id": "",
                    "keyName": "aggregations",
                    "label": "",
                    "params": [
                      ObjectSchema {
                        "description": "",
                        "enum": [],
                        "examples": [],
                        "format": "",
                        "id": "",
                        "keyName": "days",
                        "label": "",
                        "params": [
                          ArraySchema {
                            "description": "",
                            "enum": [],
                            "examples": [],
                            "format": "",
                            "id": "",
                            "keyName": "buckets",
                            "label": "",
                            "params": [
                              ObjectSchema {
                                "description": "",
                                "enum": [],
                                "examples": [],
                                "format": "",
                                "id": "",
                                "keyName": "",
                                "label": "",
                                "params": [
                                  StringSchema {
                                    "description": "日期",
                                    "enum": [],
                                    "examples": [],
                                    "format": "",
                                    "id": "",
                                    "keyName": "key_as_string",
                                    "label": "日期",
                                    "params": [],
                                    "rawType": "string",
                                    "rules": {
                                      "maxLength": undefined,
                                      "minLength": undefined,
                                      "pattern": undefined,
                                      "required": true,
                                    },
                                    "title": "",
                                    "type": "string",
                                  },
                                  NumberSchema {
                                    "description": "条数",
                                    "enum": [],
                                    "examples": [],
                                    "format": "int32",
                                    "id": "",
                                    "keyName": "doc_count",
                                    "label": "条数",
                                    "params": [],
                                    "rawType": "integer",
                                    "rules": {
                                      "exclusiveMaximum": undefined,
                                      "exclusiveMinimum": undefined,
                                      "maximum": undefined,
                                      "minimum": undefined,
                                      "multipleOf": undefined,
                                      "required": true,
                                    },
                                    "title": "",
                                    "type": "number",
                                  },
                                ],
                                "rawType": "object",
                                "rules": {
                                  "required": true,
                                },
                                "title": "",
                                "type": "object",
                              },
                            ],
                            "rawType": "array",
                            "rules": {
                              "maxLength": undefined,
                              "minLength": undefined,
                              "required": true,
                              "uniqueItems": undefined,
                            },
                            "title": "",
                            "type": "array",
                          },
                        ],
                        "rawType": "object",
                        "rules": {
                          "required": true,
                        },
                        "title": "",
                        "type": "object",
                      },
                    ],
                    "rawType": "object",
                    "rules": {
                      "required": true,
                    },
                    "title": "",
                    "type": "object",
                  },
                  ObjectSchema {
                    "description": "",
                    "enum": [],
                    "examples": [],
                    "format": "",
                    "id": "",
                    "keyName": "alarmDay",
                    "label": "",
                    "params": [
                      ObjectSchema {
                        "description": "",
                        "enum": [],
                        "examples": [],
                        "format": "",
                        "id": "",
                        "keyName": "days",
                        "label": "",
                        "params": [
                          ArraySchema {
                            "description": "",
                            "enum": [],
                            "examples": [],
                            "format": "",
                            "id": "",
                            "keyName": "buckets",
                            "label": "",
                            "params": [
                              ObjectSchema {
                                "description": "",
                                "enum": [],
                                "examples": [],
                                "format": "",
                                "id": "",
                                "keyName": "",
                                "label": "",
                                "params": [
                                  StringSchema {
                                    "description": "日期",
                                    "enum": [],
                                    "examples": [],
                                    "format": "",
                                    "id": "",
                                    "keyName": "key_as_string",
                                    "label": "日期",
                                    "params": [],
                                    "rawType": "string",
                                    "rules": {
                                      "maxLength": undefined,
                                      "minLength": undefined,
                                      "pattern": undefined,
                                      "required": true,
                                    },
                                    "title": "",
                                    "type": "string",
                                  },
                                  NumberSchema {
                                    "description": "条数",
                                    "enum": [],
                                    "examples": [],
                                    "format": "int32",
                                    "id": "",
                                    "keyName": "doc_count",
                                    "label": "条数",
                                    "params": [],
                                    "rawType": "integer",
                                    "rules": {
                                      "exclusiveMaximum": undefined,
                                      "exclusiveMinimum": undefined,
                                      "maximum": undefined,
                                      "minimum": undefined,
                                      "multipleOf": undefined,
                                      "required": true,
                                    },
                                    "title": "",
                                    "type": "number",
                                  },
                                ],
                                "rawType": "object",
                                "rules": {
                                  "required": true,
                                },
                                "title": "",
                                "type": "object",
                              },
                            ],
                            "rawType": "array",
                            "rules": {
                              "maxLength": undefined,
                              "minLength": undefined,
                              "required": true,
                              "uniqueItems": undefined,
                            },
                            "title": "",
                            "type": "array",
                          },
                        ],
                        "rawType": "object",
                        "rules": {
                          "required": true,
                        },
                        "title": "",
                        "type": "object",
                      },
                    ],
                    "rawType": "object",
                    "rules": {
                      "required": true,
                    },
                    "title": "",
                    "type": "object",
                  },
                ],
                "rawType": "object",
                "rules": {
                  "required": true,
                },
                "title": "",
                "type": "object",
              },
            ],
            "rawType": "object",
            "rules": {
              "required": true,
            },
            "title": "",
            "type": "object",
          },
          "title": "麦谷主动安全统计 (Auth)",
        },
      ],
      "description": "tbox设备管理",
      "id": "",
      "name": "tboxDevice",
    },
    {
      "apiList": [],
      "description": "未设置分组的接口集合",
      "id": "",
      "name": "未知分组",
    },
  ],
  "description": "API V1.0",
  "documentServerUrl": "",
  "documentVersion": "3.0.1",
  "id": "",
  "title": "XX后台管理APi",
  "version": "v1",
}
`;

exports[`swagger-parser v3 text-plain-param.json: text-plain-param.json 1`] = `
{
  "basePath": "",
  "categoryList": [
    {
      "apiList": [
        {
          "cookies": null,
          "description": "",
          "docURL": "",
          "formDataKeyNameList": [],
          "headers": null,
          "id": "",
          "label": "请求参数 text/plain",
          "method": "post",
          "path": "/api/text/plain",
          "pathParamKeyNameList": [],
          "queryStringKeyNameList": [],
          "requestContentType": [
            "text/plain",
          ],
          "requestDataSchema": StringSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [],
            "rawType": "string",
            "rules": {
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
              "required": false,
            },
            "title": "",
            "type": "string",
          },
          "requestExtraDataSchema": null,
          "responseContentType": [],
          "responseDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [],
            "rawType": "object",
            "rules": {
              "required": true,
            },
            "title": "",
            "type": "object",
          },
          "title": "请求参数 text/plain",
        },
      ],
      "description": "未设置分组的接口集合",
      "id": "",
      "name": "未知分组",
    },
  ],
  "description": "",
  "documentServerUrl": "",
  "documentVersion": "3.0.1",
  "id": "",
  "title": "API HELPER 示例项目",
  "version": "1.0.0",
}
`;

exports[`swagger-parser v3 unofficial-specification-dot-query-param.json: unofficial-specification-dot-query-param.json 1`] = `
{
  "basePath": "",
  "categoryList": [
    {
      "apiList": [
        {
          "cookies": null,
          "description": "",
          "docURL": "",
          "formDataKeyNameList": [],
          "headers": null,
          "id": "",
          "label": "兼容非标准的dot参数形式",
          "method": "get",
          "path": "/compatible-error-specification-dot-query-param",
          "pathParamKeyNameList": [],
          "queryStringKeyNameList": [
            "ids",
            "dept",
            "roles",
            "有分页参数的话就加,根据你的实际查询参数编写",
          ],
          "requestContentType": [
            "application/json",
          ],
          "requestDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [
              ArraySchema {
                "description": "ID集合",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "ids",
                "label": "ID集合",
                "params": [
                  StringSchema {
                    "description": "",
                    "enum": [],
                    "examples": [],
                    "format": "",
                    "id": "",
                    "keyName": "",
                    "label": "",
                    "params": [],
                    "rawType": "",
                    "rules": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                      "required": false,
                    },
                    "title": "",
                    "type": "string",
                  },
                ],
                "rawType": "array",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "required": false,
                  "uniqueItems": undefined,
                },
                "title": "",
                "type": "array",
              },
              ObjectSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "dept",
                "label": "",
                "params": [
                  StringSchema {
                    "description": "创建者1号",
                    "enum": [],
                    "examples": [],
                    "format": "",
                    "id": "",
                    "keyName": "deptCreateBy1",
                    "label": "创建者1号",
                    "params": [],
                    "rawType": "",
                    "rules": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                      "required": false,
                    },
                    "title": "",
                    "type": "string",
                  },
                  StringSchema {
                    "description": "创建者2号",
                    "enum": [],
                    "examples": [],
                    "format": "",
                    "id": "",
                    "keyName": "deptCreateBy2",
                    "label": "创建者2号",
                    "params": [],
                    "rawType": "",
                    "rules": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                      "required": false,
                    },
                    "title": "",
                    "type": "string",
                  },
                ],
                "rawType": "object",
                "rules": {
                  "required": false,
                },
                "title": "",
                "type": "object",
              },
              ArraySchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "roles",
                "label": "",
                "params": [
                  ObjectSchema {
                    "description": "",
                    "enum": [],
                    "examples": [],
                    "format": "",
                    "id": "",
                    "keyName": "",
                    "label": "",
                    "params": [
                      StringSchema {
                        "description": "角色创建者1号",
                        "enum": [],
                        "examples": [],
                        "format": "",
                        "id": "",
                        "keyName": "roleCreateBy1",
                        "label": "角色创建者1号",
                        "params": [],
                        "rawType": "",
                        "rules": {
                          "maxLength": undefined,
                          "minLength": undefined,
                          "pattern": undefined,
                          "required": false,
                        },
                        "title": "",
                        "type": "string",
                      },
                      StringSchema {
                        "description": "角色创建时间",
                        "enum": [],
                        "examples": [],
                        "format": "",
                        "id": "",
                        "keyName": "roleCreateTime",
                        "label": "角色创建时间",
                        "params": [],
                        "rawType": "",
                        "rules": {
                          "maxLength": undefined,
                          "minLength": undefined,
                          "pattern": undefined,
                          "required": false,
                        },
                        "title": "",
                        "type": "string",
                      },
                    ],
                    "rawType": "object",
                    "rules": {
                      "required": false,
                    },
                    "title": "",
                    "type": "object",
                  },
                ],
                "rawType": "array",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "required": false,
                  "uniqueItems": undefined,
                },
                "title": "",
                "type": "array",
              },
              StringSchema {
                "description": "有分页参数的话就加,根据你的实际查询参数编写",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "有分页参数的话就加,根据你的实际查询参数编写",
                "label": "有分页参数的话就加,根据你的实际查询参数编写",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": false,
                },
                "title": "",
                "type": "string",
              },
            ],
            "rawType": "object",
            "rules": {
              "required": false,
            },
            "title": "",
            "type": "object",
          },
          "requestExtraDataSchema": null,
          "responseContentType": [],
          "responseDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [],
            "rawType": "object",
            "rules": {
              "required": true,
            },
            "title": "",
            "type": "object",
          },
          "title": "兼容非标准的dot参数形式",
        },
      ],
      "description": "未设置分组的接口集合",
      "id": "",
      "name": "未知分组",
    },
  ],
  "description": "",
  "documentServerUrl": "",
  "documentVersion": "3.0.1",
  "id": "",
  "title": "API HELPER 示例项目",
  "version": "1.0.0",
}
`;

exports[`swagger-parser v3 unofficial-specification-key-name.json: unofficial-specification-key-name.json 1`] = `
{
  "basePath": "",
  "categoryList": [
    {
      "apiList": [
        {
          "cookies": null,
          "description": "",
          "docURL": "",
          "formDataKeyNameList": [],
          "headers": null,
          "id": "",
          "label": "兼容非标准字段名称",
          "method": "get",
          "path": "/compatible-error-specification-key-name",
          "pathParamKeyNameList": [],
          "queryStringKeyNameList": [
            "2022-05-07 00:01:07",
          ],
          "requestContentType": [
            "application/json",
          ],
          "requestDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [
              StringSchema {
                "description": "创建时间（非标准字段名称）",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "2022-05-07 00:01:07",
                "label": "创建时间（非标准字段名称）",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": false,
                },
                "title": "",
                "type": "string",
              },
            ],
            "rawType": "object",
            "rules": {
              "required": false,
            },
            "title": "",
            "type": "object",
          },
          "requestExtraDataSchema": null,
          "responseContentType": [],
          "responseDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [],
            "rawType": "object",
            "rules": {
              "required": true,
            },
            "title": "",
            "type": "object",
          },
          "title": "兼容非标准字段名称",
        },
      ],
      "description": "未设置分组的接口集合",
      "id": "",
      "name": "未知分组",
    },
  ],
  "description": "",
  "documentServerUrl": "",
  "documentVersion": "3.0.1",
  "id": "",
  "title": "API HELPER 示例项目",
  "version": "1.0.0",
}
`;

exports[`swagger-parser v3 wrong-issues-2.json: wrong-issues-2.json 1`] = `
{
  "basePath": "",
  "categoryList": [
    {
      "apiList": [
        {
          "cookies": null,
          "description": "",
          "docURL": "",
          "formDataKeyNameList": [],
          "headers": null,
          "id": "",
          "label": "ID of  pet  * 换行符测试 * to update",
          "method": "get",
          "path": "/wrong-issues-2",
          "pathParamKeyNameList": [],
          "queryStringKeyNameList": [
            "id",
          ],
          "requestContentType": [
            "application/json",
          ],
          "requestDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [
              StringSchema {
                "description": "ID of pet * 换行符测试 * to update",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "id",
                "label": "ID of pet * 换行符测试 * to update",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": false,
                },
                "title": "",
                "type": "string",
              },
            ],
            "rawType": "object",
            "rules": {
              "required": false,
            },
            "title": "",
            "type": "object",
          },
          "requestExtraDataSchema": null,
          "responseContentType": [],
          "responseDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [],
            "rawType": "object",
            "rules": {
              "required": true,
            },
            "title": "",
            "type": "object",
          },
          "title": "ID of  pet  * 换行符测试 * to update",
        },
      ],
      "description": "未设置分组的接口集合",
      "id": "",
      "name": "未知分组",
    },
  ],
  "description": "",
  "documentServerUrl": "",
  "documentVersion": "3.0.1",
  "id": "",
  "title": "API HELPER 示例项目",
  "version": "1.0.0",
}
`;

exports[`swagger-parser v3 x-www-form-urlencoded-param.json: x-www-form-urlencoded-param.json 1`] = `
{
  "basePath": "",
  "categoryList": [
    {
      "apiList": [
        {
          "cookies": null,
          "description": "",
          "docURL": "",
          "formDataKeyNameList": [],
          "headers": null,
          "id": "",
          "label": "请求参数 x-www-form-urlencoded",
          "method": "post",
          "path": "/x-www-form-urlencoded",
          "pathParamKeyNameList": [],
          "queryStringKeyNameList": [],
          "requestContentType": [
            "application/x-www-form-urlencoded",
          ],
          "requestDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [
              StringSchema {
                "description": "",
                "enum": [],
                "examples": [],
                "format": "",
                "id": "",
                "keyName": "username",
                "label": "",
                "params": [],
                "rawType": "string",
                "rules": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                  "required": false,
                },
                "title": "",
                "type": "string",
              },
            ],
            "rawType": "object",
            "rules": {
              "required": false,
            },
            "title": "",
            "type": "object",
          },
          "requestExtraDataSchema": null,
          "responseContentType": [],
          "responseDataSchema": ObjectSchema {
            "description": "",
            "enum": [],
            "examples": [],
            "format": "",
            "id": "",
            "keyName": "",
            "label": "",
            "params": [],
            "rawType": "object",
            "rules": {
              "required": true,
            },
            "title": "",
            "type": "object",
          },
          "title": "请求参数 x-www-form-urlencoded",
        },
      ],
      "description": "未设置分组的接口集合",
      "id": "",
      "name": "未知分组",
    },
  ],
  "description": "",
  "documentServerUrl": "",
  "documentVersion": "3.0.1",
  "id": "",
  "title": "API HELPER 示例项目",
  "version": "1.0.0",
}
`;
